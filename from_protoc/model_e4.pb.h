// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_e4.proto

#ifndef PROTOBUF_model_5fe4_2eproto__INCLUDED
#define PROTOBUF_model_5fe4_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_model_5fe4_2eproto();
void protobuf_AssignDesc_model_5fe4_2eproto();
void protobuf_ShutdownFile_model_5fe4_2eproto();

class E4Config;
class E4State;
class E4State_Particles;
class E4StateGeneratorConfig;
class E4Model;
class E4Solution;
class E4Special;
class E4Special_Hist;

// ===================================================================

class E4Config : public ::google::protobuf::Message {
 public:
  E4Config();
  virtual ~E4Config();

  E4Config(const E4Config& from);

  inline E4Config& operator=(const E4Config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4Config& default_instance();

  void Swap(E4Config* other);

  // implements Message ----------------------------------------------

  E4Config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4Config& from);
  void MergeFrom(const E4Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 N = 1;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 1;
  inline ::google::protobuf::uint32 n() const;
  inline void set_n(::google::protobuf::uint32 value);

  // optional double delta_0 = 2;
  inline bool has_delta_0() const;
  inline void clear_delta_0();
  static const int kDelta0FieldNumber = 2;
  inline double delta_0() const;
  inline void set_delta_0(double value);

  // optional double alpha = 3;
  inline bool has_alpha() const;
  inline void clear_alpha();
  static const int kAlphaFieldNumber = 3;
  inline double alpha() const;
  inline void set_alpha(double value);

  // optional double theta = 4;
  inline bool has_theta() const;
  inline void clear_theta();
  static const int kThetaFieldNumber = 4;
  inline double theta() const;
  inline void set_theta(double value);

  // optional double E0 = 5;
  inline bool has_e0() const;
  inline void clear_e0();
  static const int kE0FieldNumber = 5;
  inline double e0() const;
  inline void set_e0(double value);

  // @@protoc_insertion_point(class_scope:pb.E4Config)
 private:
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_delta_0();
  inline void clear_has_delta_0();
  inline void set_has_alpha();
  inline void clear_has_alpha();
  inline void set_has_theta();
  inline void clear_has_theta();
  inline void set_has_e0();
  inline void clear_has_e0();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double delta_0_;
  double alpha_;
  double theta_;
  double e0_;
  ::google::protobuf::uint32 n_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4Config* default_instance_;
};
// -------------------------------------------------------------------

class E4State_Particles : public ::google::protobuf::Message {
 public:
  E4State_Particles();
  virtual ~E4State_Particles();

  E4State_Particles(const E4State_Particles& from);

  inline E4State_Particles& operator=(const E4State_Particles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4State_Particles& default_instance();

  void Swap(E4State_Particles* other);

  // implements Message ----------------------------------------------

  E4State_Particles* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4State_Particles& from);
  void MergeFrom(const E4State_Particles& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double a = 4;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 4;
  inline double a() const;
  inline void set_a(double value);

  // required double psi = 5;
  inline bool has_psi() const;
  inline void clear_psi();
  static const int kPsiFieldNumber = 5;
  inline double psi() const;
  inline void set_psi(double value);

  // required double z = 6;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 6;
  inline double z() const;
  inline void set_z(double value);

  // required double delta = 7;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 7;
  inline double delta() const;
  inline void set_delta(double value);

  // @@protoc_insertion_point(class_scope:pb.E4State.Particles)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_psi();
  inline void clear_has_psi();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_delta();
  inline void clear_has_delta();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double a_;
  double psi_;
  double z_;
  double delta_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4State_Particles* default_instance_;
};
// -------------------------------------------------------------------

class E4State : public ::google::protobuf::Message {
 public:
  E4State();
  virtual ~E4State();

  E4State(const E4State& from);

  inline E4State& operator=(const E4State& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4State& default_instance();

  void Swap(E4State* other);

  // implements Message ----------------------------------------------

  E4State* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4State& from);
  void MergeFrom(const E4State& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef E4State_Particles Particles;

  // accessors -------------------------------------------------------

  // required double E = 1;
  inline bool has_e() const;
  inline void clear_e();
  static const int kEFieldNumber = 1;
  inline double e() const;
  inline void set_e(double value);

  // required double phi = 2;
  inline bool has_phi() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 2;
  inline double phi() const;
  inline void set_phi(double value);

  // optional double Eout = 8;
  inline bool has_eout() const;
  inline void clear_eout();
  static const int kEoutFieldNumber = 8;
  inline double eout() const;
  inline void set_eout(double value);

  // repeated group Particles = 3 {
  inline int particles_size() const;
  inline void clear_particles();
  static const int kParticlesFieldNumber = 3;
  inline const ::pb::E4State_Particles& particles(int index) const;
  inline ::pb::E4State_Particles* mutable_particles(int index);
  inline ::pb::E4State_Particles* add_particles();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::E4State_Particles >&
      particles() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::E4State_Particles >*
      mutable_particles();

  // @@protoc_insertion_point(class_scope:pb.E4State)
 private:
  inline void set_has_e();
  inline void clear_has_e();
  inline void set_has_phi();
  inline void clear_has_phi();
  inline void set_has_eout();
  inline void clear_has_eout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double e_;
  double phi_;
  double eout_;
  ::google::protobuf::RepeatedPtrField< ::pb::E4State_Particles > particles_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4State* default_instance_;
};
// -------------------------------------------------------------------

class E4StateGeneratorConfig : public ::google::protobuf::Message {
 public:
  E4StateGeneratorConfig();
  virtual ~E4StateGeneratorConfig();

  E4StateGeneratorConfig(const E4StateGeneratorConfig& from);

  inline E4StateGeneratorConfig& operator=(const E4StateGeneratorConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4StateGeneratorConfig& default_instance();

  void Swap(E4StateGeneratorConfig* other);

  // implements Message ----------------------------------------------

  E4StateGeneratorConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4StateGeneratorConfig& from);
  void MergeFrom(const E4StateGeneratorConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double E0 = 1;
  inline bool has_e0() const;
  inline void clear_e0();
  static const int kE0FieldNumber = 1;
  inline double e0() const;
  inline void set_e0(double value);

  // required double phi0 = 2;
  inline bool has_phi0() const;
  inline void clear_phi0();
  static const int kPhi0FieldNumber = 2;
  inline double phi0() const;
  inline void set_phi0(double value);

  // required double A0 = 3;
  inline bool has_a0() const;
  inline void clear_a0();
  static const int kA0FieldNumber = 3;
  inline double a0() const;
  inline void set_a0(double value);

  // @@protoc_insertion_point(class_scope:pb.E4StateGeneratorConfig)
 private:
  inline void set_has_e0();
  inline void clear_has_e0();
  inline void set_has_phi0();
  inline void clear_has_phi0();
  inline void set_has_a0();
  inline void clear_has_a0();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double e0_;
  double phi0_;
  double a0_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4StateGeneratorConfig* default_instance_;
};
// -------------------------------------------------------------------

class E4Model : public ::google::protobuf::Message {
 public:
  E4Model();
  virtual ~E4Model();

  E4Model(const E4Model& from);

  inline E4Model& operator=(const E4Model& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4Model& default_instance();

  void Swap(E4Model* other);

  // implements Message ----------------------------------------------

  E4Model* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4Model& from);
  void MergeFrom(const E4Model& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.E4Config pconfig = 1;
  inline bool has_pconfig() const;
  inline void clear_pconfig();
  static const int kPconfigFieldNumber = 1;
  inline const ::pb::E4Config& pconfig() const;
  inline ::pb::E4Config* mutable_pconfig();
  inline ::pb::E4Config* release_pconfig();
  inline void set_allocated_pconfig(::pb::E4Config* pconfig);

  // required .pb.E4State state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::pb::E4State& state() const;
  inline ::pb::E4State* mutable_state();
  inline ::pb::E4State* release_state();
  inline void set_allocated_state(::pb::E4State* state);

  // required .pb.EXPetscSolverConfig sconfig = 3;
  inline bool has_sconfig() const;
  inline void clear_sconfig();
  static const int kSconfigFieldNumber = 3;
  inline const ::pb::EXPetscSolverConfig& sconfig() const;
  inline ::pb::EXPetscSolverConfig* mutable_sconfig();
  inline ::pb::EXPetscSolverConfig* release_sconfig();
  inline void set_allocated_sconfig(::pb::EXPetscSolverConfig* sconfig);

  // @@protoc_insertion_point(class_scope:pb.E4Model)
 private:
  inline void set_has_pconfig();
  inline void clear_has_pconfig();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_sconfig();
  inline void clear_has_sconfig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::E4Config* pconfig_;
  ::pb::E4State* state_;
  ::pb::EXPetscSolverConfig* sconfig_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4Model* default_instance_;
};
// -------------------------------------------------------------------

class E4Solution : public ::google::protobuf::Message {
 public:
  E4Solution();
  virtual ~E4Solution();

  E4Solution(const E4Solution& from);

  inline E4Solution& operator=(const E4Solution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4Solution& default_instance();

  void Swap(E4Solution* other);

  // implements Message ----------------------------------------------

  E4Solution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4Solution& from);
  void MergeFrom(const E4Solution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.E4State state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline const ::pb::E4State& state() const;
  inline ::pb::E4State* mutable_state();
  inline ::pb::E4State* release_state();
  inline void set_allocated_state(::pb::E4State* state);

  // optional .pb.E4State d_state = 2;
  inline bool has_d_state() const;
  inline void clear_d_state();
  static const int kDStateFieldNumber = 2;
  inline const ::pb::E4State& d_state() const;
  inline ::pb::E4State* mutable_d_state();
  inline ::pb::E4State* release_d_state();
  inline void set_allocated_d_state(::pb::E4State* d_state);

  // @@protoc_insertion_point(class_scope:pb.E4Solution)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_d_state();
  inline void clear_has_d_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::E4State* state_;
  ::pb::E4State* d_state_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4Solution* default_instance_;
};
// -------------------------------------------------------------------

class E4Special_Hist : public ::google::protobuf::Message {
 public:
  E4Special_Hist();
  virtual ~E4Special_Hist();

  E4Special_Hist(const E4Special_Hist& from);

  inline E4Special_Hist& operator=(const E4Special_Hist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4Special_Hist& default_instance();

  void Swap(E4Special_Hist* other);

  // implements Message ----------------------------------------------

  E4Special_Hist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4Special_Hist& from);
  void MergeFrom(const E4Special_Hist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 14;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 14;
  inline double x() const;
  inline void set_x(double value);

  // required double y = 15;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 15;
  inline double y() const;
  inline void set_y(double value);

  // @@protoc_insertion_point(class_scope:pb.E4Special.Hist)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4Special_Hist* default_instance_;
};
// -------------------------------------------------------------------

class E4Special : public ::google::protobuf::Message {
 public:
  E4Special();
  virtual ~E4Special();

  E4Special(const E4Special& from);

  inline E4Special& operator=(const E4Special& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E4Special& default_instance();

  void Swap(E4Special* other);

  // implements Message ----------------------------------------------

  E4Special* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E4Special& from);
  void MergeFrom(const E4Special& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef E4Special_Hist Hist;

  // accessors -------------------------------------------------------

  // optional double e_2 = 1;
  inline bool has_e_2() const;
  inline void clear_e_2();
  static const int kE2FieldNumber = 1;
  inline double e_2() const;
  inline void set_e_2(double value);

  // optional double aver_a_2 = 2;
  inline bool has_aver_a_2() const;
  inline void clear_aver_a_2();
  static const int kAverA2FieldNumber = 2;
  inline double aver_a_2() const;
  inline void set_aver_a_2(double value);

  // optional double int_e_a = 4;
  inline bool has_int_e_a() const;
  inline void clear_int_e_a();
  static const int kIntEAFieldNumber = 4;
  inline double int_e_a() const;
  inline void set_int_e_a(double value);

  // optional double Na = 5;
  inline bool has_na() const;
  inline void clear_na();
  static const int kNaFieldNumber = 5;
  inline double na() const;
  inline void set_na(double value);

  // optional double Nb = 6;
  inline bool has_nb() const;
  inline void clear_nb();
  static const int kNbFieldNumber = 6;
  inline double nb() const;
  inline void set_nb(double value);

  // optional double M = 17;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 17;
  inline double m() const;
  inline void set_m(double value);

  // optional double N = 18;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 18;
  inline double n() const;
  inline void set_n(double value);

  // optional double Ia = 7;
  inline bool has_ia() const;
  inline void clear_ia();
  static const int kIaFieldNumber = 7;
  inline double ia() const;
  inline void set_ia(double value);

  // optional double Ib = 8;
  inline bool has_ib() const;
  inline void clear_ib();
  static const int kIbFieldNumber = 8;
  inline double ib() const;
  inline void set_ib(double value);

  // optional double Ia_aver = 9;
  inline bool has_ia_aver() const;
  inline void clear_ia_aver();
  static const int kIaAverFieldNumber = 9;
  inline double ia_aver() const;
  inline void set_ia_aver(double value);

  // optional double Ib_aver = 10;
  inline bool has_ib_aver() const;
  inline void clear_ib_aver();
  static const int kIbAverFieldNumber = 10;
  inline double ib_aver() const;
  inline void set_ib_aver(double value);

  // optional double Wa = 11;
  inline bool has_wa() const;
  inline void clear_wa();
  static const int kWaFieldNumber = 11;
  inline double wa() const;
  inline void set_wa(double value);

  // optional double Wb = 12;
  inline bool has_wb() const;
  inline void clear_wb();
  static const int kWbFieldNumber = 12;
  inline double wb() const;
  inline void set_wb(double value);

  // repeated group Hist = 13 {
  inline int hist_size() const;
  inline void clear_hist();
  static const int kHistFieldNumber = 13;
  inline const ::pb::E4Special_Hist& hist(int index) const;
  inline ::pb::E4Special_Hist* mutable_hist(int index);
  inline ::pb::E4Special_Hist* add_hist();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::E4Special_Hist >&
      hist() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::E4Special_Hist >*
      mutable_hist();

  // @@protoc_insertion_point(class_scope:pb.E4Special)
 private:
  inline void set_has_e_2();
  inline void clear_has_e_2();
  inline void set_has_aver_a_2();
  inline void clear_has_aver_a_2();
  inline void set_has_int_e_a();
  inline void clear_has_int_e_a();
  inline void set_has_na();
  inline void clear_has_na();
  inline void set_has_nb();
  inline void clear_has_nb();
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_ia();
  inline void clear_has_ia();
  inline void set_has_ib();
  inline void clear_has_ib();
  inline void set_has_ia_aver();
  inline void clear_has_ia_aver();
  inline void set_has_ib_aver();
  inline void clear_has_ib_aver();
  inline void set_has_wa();
  inline void clear_has_wa();
  inline void set_has_wb();
  inline void clear_has_wb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double e_2_;
  double aver_a_2_;
  double int_e_a_;
  double na_;
  double nb_;
  double m_;
  double n_;
  double ia_;
  double ib_;
  double ia_aver_;
  double ib_aver_;
  double wa_;
  double wb_;
  ::google::protobuf::RepeatedPtrField< ::pb::E4Special_Hist > hist_;
  friend void  protobuf_AddDesc_model_5fe4_2eproto();
  friend void protobuf_AssignDesc_model_5fe4_2eproto();
  friend void protobuf_ShutdownFile_model_5fe4_2eproto();

  void InitAsDefaultInstance();
  static E4Special* default_instance_;
};
// ===================================================================


// ===================================================================

// E4Config

// required uint32 N = 1;
inline bool E4Config::has_n() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4Config::set_has_n() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4Config::clear_has_n() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4Config::clear_n() {
  n_ = 0u;
  clear_has_n();
}
inline ::google::protobuf::uint32 E4Config::n() const {
  // @@protoc_insertion_point(field_get:pb.E4Config.N)
  return n_;
}
inline void E4Config::set_n(::google::protobuf::uint32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Config.N)
}

// optional double delta_0 = 2;
inline bool E4Config::has_delta_0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4Config::set_has_delta_0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4Config::clear_has_delta_0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4Config::clear_delta_0() {
  delta_0_ = 0;
  clear_has_delta_0();
}
inline double E4Config::delta_0() const {
  // @@protoc_insertion_point(field_get:pb.E4Config.delta_0)
  return delta_0_;
}
inline void E4Config::set_delta_0(double value) {
  set_has_delta_0();
  delta_0_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Config.delta_0)
}

// optional double alpha = 3;
inline bool E4Config::has_alpha() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E4Config::set_has_alpha() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E4Config::clear_has_alpha() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E4Config::clear_alpha() {
  alpha_ = 0;
  clear_has_alpha();
}
inline double E4Config::alpha() const {
  // @@protoc_insertion_point(field_get:pb.E4Config.alpha)
  return alpha_;
}
inline void E4Config::set_alpha(double value) {
  set_has_alpha();
  alpha_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Config.alpha)
}

// optional double theta = 4;
inline bool E4Config::has_theta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E4Config::set_has_theta() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E4Config::clear_has_theta() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E4Config::clear_theta() {
  theta_ = 0;
  clear_has_theta();
}
inline double E4Config::theta() const {
  // @@protoc_insertion_point(field_get:pb.E4Config.theta)
  return theta_;
}
inline void E4Config::set_theta(double value) {
  set_has_theta();
  theta_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Config.theta)
}

// optional double E0 = 5;
inline bool E4Config::has_e0() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E4Config::set_has_e0() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E4Config::clear_has_e0() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E4Config::clear_e0() {
  e0_ = 0;
  clear_has_e0();
}
inline double E4Config::e0() const {
  // @@protoc_insertion_point(field_get:pb.E4Config.E0)
  return e0_;
}
inline void E4Config::set_e0(double value) {
  set_has_e0();
  e0_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Config.E0)
}

// -------------------------------------------------------------------

// E4State_Particles

// required double a = 4;
inline bool E4State_Particles::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4State_Particles::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4State_Particles::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4State_Particles::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline double E4State_Particles::a() const {
  // @@protoc_insertion_point(field_get:pb.E4State.Particles.a)
  return a_;
}
inline void E4State_Particles::set_a(double value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:pb.E4State.Particles.a)
}

// required double psi = 5;
inline bool E4State_Particles::has_psi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4State_Particles::set_has_psi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4State_Particles::clear_has_psi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4State_Particles::clear_psi() {
  psi_ = 0;
  clear_has_psi();
}
inline double E4State_Particles::psi() const {
  // @@protoc_insertion_point(field_get:pb.E4State.Particles.psi)
  return psi_;
}
inline void E4State_Particles::set_psi(double value) {
  set_has_psi();
  psi_ = value;
  // @@protoc_insertion_point(field_set:pb.E4State.Particles.psi)
}

// required double z = 6;
inline bool E4State_Particles::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E4State_Particles::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E4State_Particles::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E4State_Particles::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double E4State_Particles::z() const {
  // @@protoc_insertion_point(field_get:pb.E4State.Particles.z)
  return z_;
}
inline void E4State_Particles::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:pb.E4State.Particles.z)
}

// required double delta = 7;
inline bool E4State_Particles::has_delta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E4State_Particles::set_has_delta() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E4State_Particles::clear_has_delta() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E4State_Particles::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline double E4State_Particles::delta() const {
  // @@protoc_insertion_point(field_get:pb.E4State.Particles.delta)
  return delta_;
}
inline void E4State_Particles::set_delta(double value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:pb.E4State.Particles.delta)
}

// -------------------------------------------------------------------

// E4State

// required double E = 1;
inline bool E4State::has_e() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4State::set_has_e() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4State::clear_has_e() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4State::clear_e() {
  e_ = 0;
  clear_has_e();
}
inline double E4State::e() const {
  // @@protoc_insertion_point(field_get:pb.E4State.E)
  return e_;
}
inline void E4State::set_e(double value) {
  set_has_e();
  e_ = value;
  // @@protoc_insertion_point(field_set:pb.E4State.E)
}

// required double phi = 2;
inline bool E4State::has_phi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4State::set_has_phi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4State::clear_has_phi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4State::clear_phi() {
  phi_ = 0;
  clear_has_phi();
}
inline double E4State::phi() const {
  // @@protoc_insertion_point(field_get:pb.E4State.phi)
  return phi_;
}
inline void E4State::set_phi(double value) {
  set_has_phi();
  phi_ = value;
  // @@protoc_insertion_point(field_set:pb.E4State.phi)
}

// optional double Eout = 8;
inline bool E4State::has_eout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E4State::set_has_eout() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E4State::clear_has_eout() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E4State::clear_eout() {
  eout_ = 0;
  clear_has_eout();
}
inline double E4State::eout() const {
  // @@protoc_insertion_point(field_get:pb.E4State.Eout)
  return eout_;
}
inline void E4State::set_eout(double value) {
  set_has_eout();
  eout_ = value;
  // @@protoc_insertion_point(field_set:pb.E4State.Eout)
}

// repeated group Particles = 3 {
inline int E4State::particles_size() const {
  return particles_.size();
}
inline void E4State::clear_particles() {
  particles_.Clear();
}
inline const ::pb::E4State_Particles& E4State::particles(int index) const {
  // @@protoc_insertion_point(field_get:pb.E4State.particles)
  return particles_.Get(index);
}
inline ::pb::E4State_Particles* E4State::mutable_particles(int index) {
  // @@protoc_insertion_point(field_mutable:pb.E4State.particles)
  return particles_.Mutable(index);
}
inline ::pb::E4State_Particles* E4State::add_particles() {
  // @@protoc_insertion_point(field_add:pb.E4State.particles)
  return particles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::E4State_Particles >&
E4State::particles() const {
  // @@protoc_insertion_point(field_list:pb.E4State.particles)
  return particles_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::E4State_Particles >*
E4State::mutable_particles() {
  // @@protoc_insertion_point(field_mutable_list:pb.E4State.particles)
  return &particles_;
}

// -------------------------------------------------------------------

// E4StateGeneratorConfig

// required double E0 = 1;
inline bool E4StateGeneratorConfig::has_e0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4StateGeneratorConfig::set_has_e0() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4StateGeneratorConfig::clear_has_e0() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4StateGeneratorConfig::clear_e0() {
  e0_ = 0;
  clear_has_e0();
}
inline double E4StateGeneratorConfig::e0() const {
  // @@protoc_insertion_point(field_get:pb.E4StateGeneratorConfig.E0)
  return e0_;
}
inline void E4StateGeneratorConfig::set_e0(double value) {
  set_has_e0();
  e0_ = value;
  // @@protoc_insertion_point(field_set:pb.E4StateGeneratorConfig.E0)
}

// required double phi0 = 2;
inline bool E4StateGeneratorConfig::has_phi0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4StateGeneratorConfig::set_has_phi0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4StateGeneratorConfig::clear_has_phi0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4StateGeneratorConfig::clear_phi0() {
  phi0_ = 0;
  clear_has_phi0();
}
inline double E4StateGeneratorConfig::phi0() const {
  // @@protoc_insertion_point(field_get:pb.E4StateGeneratorConfig.phi0)
  return phi0_;
}
inline void E4StateGeneratorConfig::set_phi0(double value) {
  set_has_phi0();
  phi0_ = value;
  // @@protoc_insertion_point(field_set:pb.E4StateGeneratorConfig.phi0)
}

// required double A0 = 3;
inline bool E4StateGeneratorConfig::has_a0() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E4StateGeneratorConfig::set_has_a0() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E4StateGeneratorConfig::clear_has_a0() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E4StateGeneratorConfig::clear_a0() {
  a0_ = 0;
  clear_has_a0();
}
inline double E4StateGeneratorConfig::a0() const {
  // @@protoc_insertion_point(field_get:pb.E4StateGeneratorConfig.A0)
  return a0_;
}
inline void E4StateGeneratorConfig::set_a0(double value) {
  set_has_a0();
  a0_ = value;
  // @@protoc_insertion_point(field_set:pb.E4StateGeneratorConfig.A0)
}

// -------------------------------------------------------------------

// E4Model

// required .pb.E4Config pconfig = 1;
inline bool E4Model::has_pconfig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4Model::set_has_pconfig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4Model::clear_has_pconfig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4Model::clear_pconfig() {
  if (pconfig_ != NULL) pconfig_->::pb::E4Config::Clear();
  clear_has_pconfig();
}
inline const ::pb::E4Config& E4Model::pconfig() const {
  // @@protoc_insertion_point(field_get:pb.E4Model.pconfig)
  return pconfig_ != NULL ? *pconfig_ : *default_instance_->pconfig_;
}
inline ::pb::E4Config* E4Model::mutable_pconfig() {
  set_has_pconfig();
  if (pconfig_ == NULL) pconfig_ = new ::pb::E4Config;
  // @@protoc_insertion_point(field_mutable:pb.E4Model.pconfig)
  return pconfig_;
}
inline ::pb::E4Config* E4Model::release_pconfig() {
  clear_has_pconfig();
  ::pb::E4Config* temp = pconfig_;
  pconfig_ = NULL;
  return temp;
}
inline void E4Model::set_allocated_pconfig(::pb::E4Config* pconfig) {
  delete pconfig_;
  pconfig_ = pconfig;
  if (pconfig) {
    set_has_pconfig();
  } else {
    clear_has_pconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E4Model.pconfig)
}

// required .pb.E4State state = 2;
inline bool E4Model::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4Model::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4Model::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4Model::clear_state() {
  if (state_ != NULL) state_->::pb::E4State::Clear();
  clear_has_state();
}
inline const ::pb::E4State& E4Model::state() const {
  // @@protoc_insertion_point(field_get:pb.E4Model.state)
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::pb::E4State* E4Model::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::pb::E4State;
  // @@protoc_insertion_point(field_mutable:pb.E4Model.state)
  return state_;
}
inline ::pb::E4State* E4Model::release_state() {
  clear_has_state();
  ::pb::E4State* temp = state_;
  state_ = NULL;
  return temp;
}
inline void E4Model::set_allocated_state(::pb::E4State* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E4Model.state)
}

// required .pb.EXPetscSolverConfig sconfig = 3;
inline bool E4Model::has_sconfig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E4Model::set_has_sconfig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E4Model::clear_has_sconfig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E4Model::clear_sconfig() {
  if (sconfig_ != NULL) sconfig_->::pb::EXPetscSolverConfig::Clear();
  clear_has_sconfig();
}
inline const ::pb::EXPetscSolverConfig& E4Model::sconfig() const {
  // @@protoc_insertion_point(field_get:pb.E4Model.sconfig)
  return sconfig_ != NULL ? *sconfig_ : *default_instance_->sconfig_;
}
inline ::pb::EXPetscSolverConfig* E4Model::mutable_sconfig() {
  set_has_sconfig();
  if (sconfig_ == NULL) sconfig_ = new ::pb::EXPetscSolverConfig;
  // @@protoc_insertion_point(field_mutable:pb.E4Model.sconfig)
  return sconfig_;
}
inline ::pb::EXPetscSolverConfig* E4Model::release_sconfig() {
  clear_has_sconfig();
  ::pb::EXPetscSolverConfig* temp = sconfig_;
  sconfig_ = NULL;
  return temp;
}
inline void E4Model::set_allocated_sconfig(::pb::EXPetscSolverConfig* sconfig) {
  delete sconfig_;
  sconfig_ = sconfig;
  if (sconfig) {
    set_has_sconfig();
  } else {
    clear_has_sconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E4Model.sconfig)
}

// -------------------------------------------------------------------

// E4Solution

// required .pb.E4State state = 1;
inline bool E4Solution::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4Solution::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4Solution::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4Solution::clear_state() {
  if (state_ != NULL) state_->::pb::E4State::Clear();
  clear_has_state();
}
inline const ::pb::E4State& E4Solution::state() const {
  // @@protoc_insertion_point(field_get:pb.E4Solution.state)
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::pb::E4State* E4Solution::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::pb::E4State;
  // @@protoc_insertion_point(field_mutable:pb.E4Solution.state)
  return state_;
}
inline ::pb::E4State* E4Solution::release_state() {
  clear_has_state();
  ::pb::E4State* temp = state_;
  state_ = NULL;
  return temp;
}
inline void E4Solution::set_allocated_state(::pb::E4State* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E4Solution.state)
}

// optional .pb.E4State d_state = 2;
inline bool E4Solution::has_d_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4Solution::set_has_d_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4Solution::clear_has_d_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4Solution::clear_d_state() {
  if (d_state_ != NULL) d_state_->::pb::E4State::Clear();
  clear_has_d_state();
}
inline const ::pb::E4State& E4Solution::d_state() const {
  // @@protoc_insertion_point(field_get:pb.E4Solution.d_state)
  return d_state_ != NULL ? *d_state_ : *default_instance_->d_state_;
}
inline ::pb::E4State* E4Solution::mutable_d_state() {
  set_has_d_state();
  if (d_state_ == NULL) d_state_ = new ::pb::E4State;
  // @@protoc_insertion_point(field_mutable:pb.E4Solution.d_state)
  return d_state_;
}
inline ::pb::E4State* E4Solution::release_d_state() {
  clear_has_d_state();
  ::pb::E4State* temp = d_state_;
  d_state_ = NULL;
  return temp;
}
inline void E4Solution::set_allocated_d_state(::pb::E4State* d_state) {
  delete d_state_;
  d_state_ = d_state;
  if (d_state) {
    set_has_d_state();
  } else {
    clear_has_d_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E4Solution.d_state)
}

// -------------------------------------------------------------------

// E4Special_Hist

// required double x = 14;
inline bool E4Special_Hist::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4Special_Hist::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4Special_Hist::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4Special_Hist::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double E4Special_Hist::x() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Hist.x)
  return x_;
}
inline void E4Special_Hist::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Hist.x)
}

// required double y = 15;
inline bool E4Special_Hist::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4Special_Hist::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4Special_Hist::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4Special_Hist::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double E4Special_Hist::y() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Hist.y)
  return y_;
}
inline void E4Special_Hist::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Hist.y)
}

// -------------------------------------------------------------------

// E4Special

// optional double e_2 = 1;
inline bool E4Special::has_e_2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E4Special::set_has_e_2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E4Special::clear_has_e_2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E4Special::clear_e_2() {
  e_2_ = 0;
  clear_has_e_2();
}
inline double E4Special::e_2() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.e_2)
  return e_2_;
}
inline void E4Special::set_e_2(double value) {
  set_has_e_2();
  e_2_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.e_2)
}

// optional double aver_a_2 = 2;
inline bool E4Special::has_aver_a_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E4Special::set_has_aver_a_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E4Special::clear_has_aver_a_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E4Special::clear_aver_a_2() {
  aver_a_2_ = 0;
  clear_has_aver_a_2();
}
inline double E4Special::aver_a_2() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.aver_a_2)
  return aver_a_2_;
}
inline void E4Special::set_aver_a_2(double value) {
  set_has_aver_a_2();
  aver_a_2_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.aver_a_2)
}

// optional double int_e_a = 4;
inline bool E4Special::has_int_e_a() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E4Special::set_has_int_e_a() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E4Special::clear_has_int_e_a() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E4Special::clear_int_e_a() {
  int_e_a_ = 0;
  clear_has_int_e_a();
}
inline double E4Special::int_e_a() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.int_e_a)
  return int_e_a_;
}
inline void E4Special::set_int_e_a(double value) {
  set_has_int_e_a();
  int_e_a_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.int_e_a)
}

// optional double Na = 5;
inline bool E4Special::has_na() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E4Special::set_has_na() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E4Special::clear_has_na() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E4Special::clear_na() {
  na_ = 0;
  clear_has_na();
}
inline double E4Special::na() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Na)
  return na_;
}
inline void E4Special::set_na(double value) {
  set_has_na();
  na_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Na)
}

// optional double Nb = 6;
inline bool E4Special::has_nb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E4Special::set_has_nb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E4Special::clear_has_nb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E4Special::clear_nb() {
  nb_ = 0;
  clear_has_nb();
}
inline double E4Special::nb() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Nb)
  return nb_;
}
inline void E4Special::set_nb(double value) {
  set_has_nb();
  nb_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Nb)
}

// optional double M = 17;
inline bool E4Special::has_m() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E4Special::set_has_m() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E4Special::clear_has_m() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E4Special::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline double E4Special::m() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.M)
  return m_;
}
inline void E4Special::set_m(double value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.M)
}

// optional double N = 18;
inline bool E4Special::has_n() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E4Special::set_has_n() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E4Special::clear_has_n() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E4Special::clear_n() {
  n_ = 0;
  clear_has_n();
}
inline double E4Special::n() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.N)
  return n_;
}
inline void E4Special::set_n(double value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.N)
}

// optional double Ia = 7;
inline bool E4Special::has_ia() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E4Special::set_has_ia() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E4Special::clear_has_ia() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E4Special::clear_ia() {
  ia_ = 0;
  clear_has_ia();
}
inline double E4Special::ia() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Ia)
  return ia_;
}
inline void E4Special::set_ia(double value) {
  set_has_ia();
  ia_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Ia)
}

// optional double Ib = 8;
inline bool E4Special::has_ib() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E4Special::set_has_ib() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E4Special::clear_has_ib() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E4Special::clear_ib() {
  ib_ = 0;
  clear_has_ib();
}
inline double E4Special::ib() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Ib)
  return ib_;
}
inline void E4Special::set_ib(double value) {
  set_has_ib();
  ib_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Ib)
}

// optional double Ia_aver = 9;
inline bool E4Special::has_ia_aver() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E4Special::set_has_ia_aver() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E4Special::clear_has_ia_aver() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E4Special::clear_ia_aver() {
  ia_aver_ = 0;
  clear_has_ia_aver();
}
inline double E4Special::ia_aver() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Ia_aver)
  return ia_aver_;
}
inline void E4Special::set_ia_aver(double value) {
  set_has_ia_aver();
  ia_aver_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Ia_aver)
}

// optional double Ib_aver = 10;
inline bool E4Special::has_ib_aver() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E4Special::set_has_ib_aver() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E4Special::clear_has_ib_aver() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E4Special::clear_ib_aver() {
  ib_aver_ = 0;
  clear_has_ib_aver();
}
inline double E4Special::ib_aver() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Ib_aver)
  return ib_aver_;
}
inline void E4Special::set_ib_aver(double value) {
  set_has_ib_aver();
  ib_aver_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Ib_aver)
}

// optional double Wa = 11;
inline bool E4Special::has_wa() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E4Special::set_has_wa() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E4Special::clear_has_wa() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E4Special::clear_wa() {
  wa_ = 0;
  clear_has_wa();
}
inline double E4Special::wa() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Wa)
  return wa_;
}
inline void E4Special::set_wa(double value) {
  set_has_wa();
  wa_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Wa)
}

// optional double Wb = 12;
inline bool E4Special::has_wb() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E4Special::set_has_wb() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E4Special::clear_has_wb() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E4Special::clear_wb() {
  wb_ = 0;
  clear_has_wb();
}
inline double E4Special::wb() const {
  // @@protoc_insertion_point(field_get:pb.E4Special.Wb)
  return wb_;
}
inline void E4Special::set_wb(double value) {
  set_has_wb();
  wb_ = value;
  // @@protoc_insertion_point(field_set:pb.E4Special.Wb)
}

// repeated group Hist = 13 {
inline int E4Special::hist_size() const {
  return hist_.size();
}
inline void E4Special::clear_hist() {
  hist_.Clear();
}
inline const ::pb::E4Special_Hist& E4Special::hist(int index) const {
  // @@protoc_insertion_point(field_get:pb.E4Special.hist)
  return hist_.Get(index);
}
inline ::pb::E4Special_Hist* E4Special::mutable_hist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.E4Special.hist)
  return hist_.Mutable(index);
}
inline ::pb::E4Special_Hist* E4Special::add_hist() {
  // @@protoc_insertion_point(field_add:pb.E4Special.hist)
  return hist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::E4Special_Hist >&
E4Special::hist() const {
  // @@protoc_insertion_point(field_list:pb.E4Special.hist)
  return hist_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::E4Special_Hist >*
E4Special::mutable_hist() {
  // @@protoc_insertion_point(field_mutable_list:pb.E4Special.hist)
  return &hist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_5fe4_2eproto__INCLUDED
