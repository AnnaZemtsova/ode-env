// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_e42m.proto

#ifndef PROTOBUF_model_5fe42m_2eproto__INCLUDED
#define PROTOBUF_model_5fe42m_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_model_5fe42m_2eproto();
void protobuf_AssignDesc_model_5fe42m_2eproto();
void protobuf_ShutdownFile_model_5fe42m_2eproto();

class E42mConfig;
class E42mState;
class E42mState_Particles;
class E42mStateGeneratorConfig;
class E42mModel;
class E42mSolution;
class E42mSpecial;
class E42mSpecial_Hist;

// ===================================================================

class E42mConfig : public ::google::protobuf::Message {
 public:
  E42mConfig();
  virtual ~E42mConfig();

  E42mConfig(const E42mConfig& from);

  inline E42mConfig& operator=(const E42mConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mConfig& default_instance();

  void Swap(E42mConfig* other);

  // implements Message ----------------------------------------------

  E42mConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mConfig& from);
  void MergeFrom(const E42mConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 N = 1;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 1;
  inline ::google::protobuf::uint32 n() const;
  inline void set_n(::google::protobuf::uint32 value);

  // optional double delta_0 = 2;
  inline bool has_delta_0() const;
  inline void clear_delta_0();
  static const int kDelta0FieldNumber = 2;
  inline double delta_0() const;
  inline void set_delta_0(double value);

  // optional double alpha = 3;
  inline bool has_alpha() const;
  inline void clear_alpha();
  static const int kAlphaFieldNumber = 3;
  inline double alpha() const;
  inline void set_alpha(double value);

  // @@protoc_insertion_point(class_scope:pb.E42mConfig)
 private:
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_delta_0();
  inline void clear_has_delta_0();
  inline void set_has_alpha();
  inline void clear_has_alpha();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double delta_0_;
  double alpha_;
  ::google::protobuf::uint32 n_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mConfig* default_instance_;
};
// -------------------------------------------------------------------

class E42mState_Particles : public ::google::protobuf::Message {
 public:
  E42mState_Particles();
  virtual ~E42mState_Particles();

  E42mState_Particles(const E42mState_Particles& from);

  inline E42mState_Particles& operator=(const E42mState_Particles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mState_Particles& default_instance();

  void Swap(E42mState_Particles* other);

  // implements Message ----------------------------------------------

  E42mState_Particles* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mState_Particles& from);
  void MergeFrom(const E42mState_Particles& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double a = 4;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 4;
  inline double a() const;
  inline void set_a(double value);

  // required double psi = 5;
  inline bool has_psi() const;
  inline void clear_psi();
  static const int kPsiFieldNumber = 5;
  inline double psi() const;
  inline void set_psi(double value);

  // required double z = 6;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 6;
  inline double z() const;
  inline void set_z(double value);

  // required double delta = 7;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 7;
  inline double delta() const;
  inline void set_delta(double value);

  // @@protoc_insertion_point(class_scope:pb.E42mState.Particles)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_psi();
  inline void clear_has_psi();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_delta();
  inline void clear_has_delta();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double a_;
  double psi_;
  double z_;
  double delta_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mState_Particles* default_instance_;
};
// -------------------------------------------------------------------

class E42mState : public ::google::protobuf::Message {
 public:
  E42mState();
  virtual ~E42mState();

  E42mState(const E42mState& from);

  inline E42mState& operator=(const E42mState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mState& default_instance();

  void Swap(E42mState* other);

  // implements Message ----------------------------------------------

  E42mState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mState& from);
  void MergeFrom(const E42mState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef E42mState_Particles Particles;

  // accessors -------------------------------------------------------

  // required double E_p = 1;
  inline bool has_e_p() const;
  inline void clear_e_p();
  static const int kEPFieldNumber = 1;
  inline double e_p() const;
  inline void set_e_p(double value);

  // required double phi_p = 2;
  inline bool has_phi_p() const;
  inline void clear_phi_p();
  static const int kPhiPFieldNumber = 2;
  inline double phi_p() const;
  inline void set_phi_p(double value);

  // repeated group Particles = 3 {
  inline int particles_size() const;
  inline void clear_particles();
  static const int kParticlesFieldNumber = 3;
  inline const ::pb::E42mState_Particles& particles(int index) const;
  inline ::pb::E42mState_Particles* mutable_particles(int index);
  inline ::pb::E42mState_Particles* add_particles();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::E42mState_Particles >&
      particles() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::E42mState_Particles >*
      mutable_particles();

  // required double E_m = 8;
  inline bool has_e_m() const;
  inline void clear_e_m();
  static const int kEMFieldNumber = 8;
  inline double e_m() const;
  inline void set_e_m(double value);

  // required double phi_m = 9;
  inline bool has_phi_m() const;
  inline void clear_phi_m();
  static const int kPhiMFieldNumber = 9;
  inline double phi_m() const;
  inline void set_phi_m(double value);

  // @@protoc_insertion_point(class_scope:pb.E42mState)
 private:
  inline void set_has_e_p();
  inline void clear_has_e_p();
  inline void set_has_phi_p();
  inline void clear_has_phi_p();
  inline void set_has_e_m();
  inline void clear_has_e_m();
  inline void set_has_phi_m();
  inline void clear_has_phi_m();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double e_p_;
  double phi_p_;
  ::google::protobuf::RepeatedPtrField< ::pb::E42mState_Particles > particles_;
  double e_m_;
  double phi_m_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mState* default_instance_;
};
// -------------------------------------------------------------------

class E42mStateGeneratorConfig : public ::google::protobuf::Message {
 public:
  E42mStateGeneratorConfig();
  virtual ~E42mStateGeneratorConfig();

  E42mStateGeneratorConfig(const E42mStateGeneratorConfig& from);

  inline E42mStateGeneratorConfig& operator=(const E42mStateGeneratorConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mStateGeneratorConfig& default_instance();

  void Swap(E42mStateGeneratorConfig* other);

  // implements Message ----------------------------------------------

  E42mStateGeneratorConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mStateGeneratorConfig& from);
  void MergeFrom(const E42mStateGeneratorConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double E_p0 = 1;
  inline bool has_e_p0() const;
  inline void clear_e_p0();
  static const int kEP0FieldNumber = 1;
  inline double e_p0() const;
  inline void set_e_p0(double value);

  // required double phi_p0 = 2;
  inline bool has_phi_p0() const;
  inline void clear_phi_p0();
  static const int kPhiP0FieldNumber = 2;
  inline double phi_p0() const;
  inline void set_phi_p0(double value);

  // required double A0 = 3;
  inline bool has_a0() const;
  inline void clear_a0();
  static const int kA0FieldNumber = 3;
  inline double a0() const;
  inline void set_a0(double value);

  // required double E_m0 = 4;
  inline bool has_e_m0() const;
  inline void clear_e_m0();
  static const int kEM0FieldNumber = 4;
  inline double e_m0() const;
  inline void set_e_m0(double value);

  // required double phi_m0 = 5;
  inline bool has_phi_m0() const;
  inline void clear_phi_m0();
  static const int kPhiM0FieldNumber = 5;
  inline double phi_m0() const;
  inline void set_phi_m0(double value);

  // @@protoc_insertion_point(class_scope:pb.E42mStateGeneratorConfig)
 private:
  inline void set_has_e_p0();
  inline void clear_has_e_p0();
  inline void set_has_phi_p0();
  inline void clear_has_phi_p0();
  inline void set_has_a0();
  inline void clear_has_a0();
  inline void set_has_e_m0();
  inline void clear_has_e_m0();
  inline void set_has_phi_m0();
  inline void clear_has_phi_m0();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double e_p0_;
  double phi_p0_;
  double a0_;
  double e_m0_;
  double phi_m0_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mStateGeneratorConfig* default_instance_;
};
// -------------------------------------------------------------------

class E42mModel : public ::google::protobuf::Message {
 public:
  E42mModel();
  virtual ~E42mModel();

  E42mModel(const E42mModel& from);

  inline E42mModel& operator=(const E42mModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mModel& default_instance();

  void Swap(E42mModel* other);

  // implements Message ----------------------------------------------

  E42mModel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mModel& from);
  void MergeFrom(const E42mModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.E42mConfig pconfig = 1;
  inline bool has_pconfig() const;
  inline void clear_pconfig();
  static const int kPconfigFieldNumber = 1;
  inline const ::pb::E42mConfig& pconfig() const;
  inline ::pb::E42mConfig* mutable_pconfig();
  inline ::pb::E42mConfig* release_pconfig();
  inline void set_allocated_pconfig(::pb::E42mConfig* pconfig);

  // required .pb.E42mState state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::pb::E42mState& state() const;
  inline ::pb::E42mState* mutable_state();
  inline ::pb::E42mState* release_state();
  inline void set_allocated_state(::pb::E42mState* state);

  // required .pb.EXPetscSolverConfig sconfig = 3;
  inline bool has_sconfig() const;
  inline void clear_sconfig();
  static const int kSconfigFieldNumber = 3;
  inline const ::pb::EXPetscSolverConfig& sconfig() const;
  inline ::pb::EXPetscSolverConfig* mutable_sconfig();
  inline ::pb::EXPetscSolverConfig* release_sconfig();
  inline void set_allocated_sconfig(::pb::EXPetscSolverConfig* sconfig);

  // @@protoc_insertion_point(class_scope:pb.E42mModel)
 private:
  inline void set_has_pconfig();
  inline void clear_has_pconfig();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_sconfig();
  inline void clear_has_sconfig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::E42mConfig* pconfig_;
  ::pb::E42mState* state_;
  ::pb::EXPetscSolverConfig* sconfig_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mModel* default_instance_;
};
// -------------------------------------------------------------------

class E42mSolution : public ::google::protobuf::Message {
 public:
  E42mSolution();
  virtual ~E42mSolution();

  E42mSolution(const E42mSolution& from);

  inline E42mSolution& operator=(const E42mSolution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mSolution& default_instance();

  void Swap(E42mSolution* other);

  // implements Message ----------------------------------------------

  E42mSolution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mSolution& from);
  void MergeFrom(const E42mSolution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.E42mState state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline const ::pb::E42mState& state() const;
  inline ::pb::E42mState* mutable_state();
  inline ::pb::E42mState* release_state();
  inline void set_allocated_state(::pb::E42mState* state);

  // optional .pb.E42mState d_state = 2;
  inline bool has_d_state() const;
  inline void clear_d_state();
  static const int kDStateFieldNumber = 2;
  inline const ::pb::E42mState& d_state() const;
  inline ::pb::E42mState* mutable_d_state();
  inline ::pb::E42mState* release_d_state();
  inline void set_allocated_d_state(::pb::E42mState* d_state);

  // @@protoc_insertion_point(class_scope:pb.E42mSolution)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_d_state();
  inline void clear_has_d_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::E42mState* state_;
  ::pb::E42mState* d_state_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mSolution* default_instance_;
};
// -------------------------------------------------------------------

class E42mSpecial_Hist : public ::google::protobuf::Message {
 public:
  E42mSpecial_Hist();
  virtual ~E42mSpecial_Hist();

  E42mSpecial_Hist(const E42mSpecial_Hist& from);

  inline E42mSpecial_Hist& operator=(const E42mSpecial_Hist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mSpecial_Hist& default_instance();

  void Swap(E42mSpecial_Hist* other);

  // implements Message ----------------------------------------------

  E42mSpecial_Hist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mSpecial_Hist& from);
  void MergeFrom(const E42mSpecial_Hist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 14;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 14;
  inline double x() const;
  inline void set_x(double value);

  // required double y = 15;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 15;
  inline double y() const;
  inline void set_y(double value);

  // @@protoc_insertion_point(class_scope:pb.E42mSpecial.Hist)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mSpecial_Hist* default_instance_;
};
// -------------------------------------------------------------------

class E42mSpecial : public ::google::protobuf::Message {
 public:
  E42mSpecial();
  virtual ~E42mSpecial();

  E42mSpecial(const E42mSpecial& from);

  inline E42mSpecial& operator=(const E42mSpecial& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E42mSpecial& default_instance();

  void Swap(E42mSpecial* other);

  // implements Message ----------------------------------------------

  E42mSpecial* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E42mSpecial& from);
  void MergeFrom(const E42mSpecial& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef E42mSpecial_Hist Hist;

  // accessors -------------------------------------------------------

  // optional double e_p_2 = 1;
  inline bool has_e_p_2() const;
  inline void clear_e_p_2();
  static const int kEP2FieldNumber = 1;
  inline double e_p_2() const;
  inline void set_e_p_2(double value);

  // optional double e_m_2 = 16;
  inline bool has_e_m_2() const;
  inline void clear_e_m_2();
  static const int kEM2FieldNumber = 16;
  inline double e_m_2() const;
  inline void set_e_m_2(double value);

  // optional double aver_a_2 = 2;
  inline bool has_aver_a_2() const;
  inline void clear_aver_a_2();
  static const int kAverA2FieldNumber = 2;
  inline double aver_a_2() const;
  inline void set_aver_a_2(double value);

  // optional double int_e_a = 4;
  inline bool has_int_e_a() const;
  inline void clear_int_e_a();
  static const int kIntEAFieldNumber = 4;
  inline double int_e_a() const;
  inline void set_int_e_a(double value);

  // optional double Na = 5;
  inline bool has_na() const;
  inline void clear_na();
  static const int kNaFieldNumber = 5;
  inline double na() const;
  inline void set_na(double value);

  // optional double Nb = 6;
  inline bool has_nb() const;
  inline void clear_nb();
  static const int kNbFieldNumber = 6;
  inline double nb() const;
  inline void set_nb(double value);

  // optional double M = 17;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 17;
  inline double m() const;
  inline void set_m(double value);

  // optional double N = 18;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 18;
  inline double n() const;
  inline void set_n(double value);

  // optional double Ia = 7;
  inline bool has_ia() const;
  inline void clear_ia();
  static const int kIaFieldNumber = 7;
  inline double ia() const;
  inline void set_ia(double value);

  // optional double Ib = 8;
  inline bool has_ib() const;
  inline void clear_ib();
  static const int kIbFieldNumber = 8;
  inline double ib() const;
  inline void set_ib(double value);

  // optional double Ia_aver = 9;
  inline bool has_ia_aver() const;
  inline void clear_ia_aver();
  static const int kIaAverFieldNumber = 9;
  inline double ia_aver() const;
  inline void set_ia_aver(double value);

  // optional double Ib_aver = 10;
  inline bool has_ib_aver() const;
  inline void clear_ib_aver();
  static const int kIbAverFieldNumber = 10;
  inline double ib_aver() const;
  inline void set_ib_aver(double value);

  // optional double Wa = 11;
  inline bool has_wa() const;
  inline void clear_wa();
  static const int kWaFieldNumber = 11;
  inline double wa() const;
  inline void set_wa(double value);

  // optional double Wb = 12;
  inline bool has_wb() const;
  inline void clear_wb();
  static const int kWbFieldNumber = 12;
  inline double wb() const;
  inline void set_wb(double value);

  // repeated group Hist = 13 {
  inline int hist_size() const;
  inline void clear_hist();
  static const int kHistFieldNumber = 13;
  inline const ::pb::E42mSpecial_Hist& hist(int index) const;
  inline ::pb::E42mSpecial_Hist* mutable_hist(int index);
  inline ::pb::E42mSpecial_Hist* add_hist();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::E42mSpecial_Hist >&
      hist() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::E42mSpecial_Hist >*
      mutable_hist();

  // @@protoc_insertion_point(class_scope:pb.E42mSpecial)
 private:
  inline void set_has_e_p_2();
  inline void clear_has_e_p_2();
  inline void set_has_e_m_2();
  inline void clear_has_e_m_2();
  inline void set_has_aver_a_2();
  inline void clear_has_aver_a_2();
  inline void set_has_int_e_a();
  inline void clear_has_int_e_a();
  inline void set_has_na();
  inline void clear_has_na();
  inline void set_has_nb();
  inline void clear_has_nb();
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_ia();
  inline void clear_has_ia();
  inline void set_has_ib();
  inline void clear_has_ib();
  inline void set_has_ia_aver();
  inline void clear_has_ia_aver();
  inline void set_has_ib_aver();
  inline void clear_has_ib_aver();
  inline void set_has_wa();
  inline void clear_has_wa();
  inline void set_has_wb();
  inline void clear_has_wb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double e_p_2_;
  double e_m_2_;
  double aver_a_2_;
  double int_e_a_;
  double na_;
  double nb_;
  double m_;
  double n_;
  double ia_;
  double ib_;
  double ia_aver_;
  double ib_aver_;
  double wa_;
  double wb_;
  ::google::protobuf::RepeatedPtrField< ::pb::E42mSpecial_Hist > hist_;
  friend void  protobuf_AddDesc_model_5fe42m_2eproto();
  friend void protobuf_AssignDesc_model_5fe42m_2eproto();
  friend void protobuf_ShutdownFile_model_5fe42m_2eproto();

  void InitAsDefaultInstance();
  static E42mSpecial* default_instance_;
};
// ===================================================================


// ===================================================================

// E42mConfig

// required uint32 N = 1;
inline bool E42mConfig::has_n() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mConfig::set_has_n() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mConfig::clear_has_n() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mConfig::clear_n() {
  n_ = 0u;
  clear_has_n();
}
inline ::google::protobuf::uint32 E42mConfig::n() const {
  // @@protoc_insertion_point(field_get:pb.E42mConfig.N)
  return n_;
}
inline void E42mConfig::set_n(::google::protobuf::uint32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mConfig.N)
}

// optional double delta_0 = 2;
inline bool E42mConfig::has_delta_0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mConfig::set_has_delta_0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mConfig::clear_has_delta_0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mConfig::clear_delta_0() {
  delta_0_ = 0;
  clear_has_delta_0();
}
inline double E42mConfig::delta_0() const {
  // @@protoc_insertion_point(field_get:pb.E42mConfig.delta_0)
  return delta_0_;
}
inline void E42mConfig::set_delta_0(double value) {
  set_has_delta_0();
  delta_0_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mConfig.delta_0)
}

// optional double alpha = 3;
inline bool E42mConfig::has_alpha() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E42mConfig::set_has_alpha() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E42mConfig::clear_has_alpha() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E42mConfig::clear_alpha() {
  alpha_ = 0;
  clear_has_alpha();
}
inline double E42mConfig::alpha() const {
  // @@protoc_insertion_point(field_get:pb.E42mConfig.alpha)
  return alpha_;
}
inline void E42mConfig::set_alpha(double value) {
  set_has_alpha();
  alpha_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mConfig.alpha)
}

// -------------------------------------------------------------------

// E42mState_Particles

// required double a = 4;
inline bool E42mState_Particles::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mState_Particles::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mState_Particles::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mState_Particles::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline double E42mState_Particles::a() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.Particles.a)
  return a_;
}
inline void E42mState_Particles::set_a(double value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.Particles.a)
}

// required double psi = 5;
inline bool E42mState_Particles::has_psi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mState_Particles::set_has_psi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mState_Particles::clear_has_psi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mState_Particles::clear_psi() {
  psi_ = 0;
  clear_has_psi();
}
inline double E42mState_Particles::psi() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.Particles.psi)
  return psi_;
}
inline void E42mState_Particles::set_psi(double value) {
  set_has_psi();
  psi_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.Particles.psi)
}

// required double z = 6;
inline bool E42mState_Particles::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E42mState_Particles::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E42mState_Particles::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E42mState_Particles::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double E42mState_Particles::z() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.Particles.z)
  return z_;
}
inline void E42mState_Particles::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.Particles.z)
}

// required double delta = 7;
inline bool E42mState_Particles::has_delta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E42mState_Particles::set_has_delta() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E42mState_Particles::clear_has_delta() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E42mState_Particles::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline double E42mState_Particles::delta() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.Particles.delta)
  return delta_;
}
inline void E42mState_Particles::set_delta(double value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.Particles.delta)
}

// -------------------------------------------------------------------

// E42mState

// required double E_p = 1;
inline bool E42mState::has_e_p() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mState::set_has_e_p() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mState::clear_has_e_p() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mState::clear_e_p() {
  e_p_ = 0;
  clear_has_e_p();
}
inline double E42mState::e_p() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.E_p)
  return e_p_;
}
inline void E42mState::set_e_p(double value) {
  set_has_e_p();
  e_p_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.E_p)
}

// required double phi_p = 2;
inline bool E42mState::has_phi_p() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mState::set_has_phi_p() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mState::clear_has_phi_p() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mState::clear_phi_p() {
  phi_p_ = 0;
  clear_has_phi_p();
}
inline double E42mState::phi_p() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.phi_p)
  return phi_p_;
}
inline void E42mState::set_phi_p(double value) {
  set_has_phi_p();
  phi_p_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.phi_p)
}

// repeated group Particles = 3 {
inline int E42mState::particles_size() const {
  return particles_.size();
}
inline void E42mState::clear_particles() {
  particles_.Clear();
}
inline const ::pb::E42mState_Particles& E42mState::particles(int index) const {
  // @@protoc_insertion_point(field_get:pb.E42mState.particles)
  return particles_.Get(index);
}
inline ::pb::E42mState_Particles* E42mState::mutable_particles(int index) {
  // @@protoc_insertion_point(field_mutable:pb.E42mState.particles)
  return particles_.Mutable(index);
}
inline ::pb::E42mState_Particles* E42mState::add_particles() {
  // @@protoc_insertion_point(field_add:pb.E42mState.particles)
  return particles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::E42mState_Particles >&
E42mState::particles() const {
  // @@protoc_insertion_point(field_list:pb.E42mState.particles)
  return particles_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::E42mState_Particles >*
E42mState::mutable_particles() {
  // @@protoc_insertion_point(field_mutable_list:pb.E42mState.particles)
  return &particles_;
}

// required double E_m = 8;
inline bool E42mState::has_e_m() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E42mState::set_has_e_m() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E42mState::clear_has_e_m() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E42mState::clear_e_m() {
  e_m_ = 0;
  clear_has_e_m();
}
inline double E42mState::e_m() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.E_m)
  return e_m_;
}
inline void E42mState::set_e_m(double value) {
  set_has_e_m();
  e_m_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.E_m)
}

// required double phi_m = 9;
inline bool E42mState::has_phi_m() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E42mState::set_has_phi_m() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E42mState::clear_has_phi_m() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E42mState::clear_phi_m() {
  phi_m_ = 0;
  clear_has_phi_m();
}
inline double E42mState::phi_m() const {
  // @@protoc_insertion_point(field_get:pb.E42mState.phi_m)
  return phi_m_;
}
inline void E42mState::set_phi_m(double value) {
  set_has_phi_m();
  phi_m_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mState.phi_m)
}

// -------------------------------------------------------------------

// E42mStateGeneratorConfig

// required double E_p0 = 1;
inline bool E42mStateGeneratorConfig::has_e_p0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mStateGeneratorConfig::set_has_e_p0() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mStateGeneratorConfig::clear_has_e_p0() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mStateGeneratorConfig::clear_e_p0() {
  e_p0_ = 0;
  clear_has_e_p0();
}
inline double E42mStateGeneratorConfig::e_p0() const {
  // @@protoc_insertion_point(field_get:pb.E42mStateGeneratorConfig.E_p0)
  return e_p0_;
}
inline void E42mStateGeneratorConfig::set_e_p0(double value) {
  set_has_e_p0();
  e_p0_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mStateGeneratorConfig.E_p0)
}

// required double phi_p0 = 2;
inline bool E42mStateGeneratorConfig::has_phi_p0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mStateGeneratorConfig::set_has_phi_p0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mStateGeneratorConfig::clear_has_phi_p0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mStateGeneratorConfig::clear_phi_p0() {
  phi_p0_ = 0;
  clear_has_phi_p0();
}
inline double E42mStateGeneratorConfig::phi_p0() const {
  // @@protoc_insertion_point(field_get:pb.E42mStateGeneratorConfig.phi_p0)
  return phi_p0_;
}
inline void E42mStateGeneratorConfig::set_phi_p0(double value) {
  set_has_phi_p0();
  phi_p0_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mStateGeneratorConfig.phi_p0)
}

// required double A0 = 3;
inline bool E42mStateGeneratorConfig::has_a0() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E42mStateGeneratorConfig::set_has_a0() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E42mStateGeneratorConfig::clear_has_a0() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E42mStateGeneratorConfig::clear_a0() {
  a0_ = 0;
  clear_has_a0();
}
inline double E42mStateGeneratorConfig::a0() const {
  // @@protoc_insertion_point(field_get:pb.E42mStateGeneratorConfig.A0)
  return a0_;
}
inline void E42mStateGeneratorConfig::set_a0(double value) {
  set_has_a0();
  a0_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mStateGeneratorConfig.A0)
}

// required double E_m0 = 4;
inline bool E42mStateGeneratorConfig::has_e_m0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E42mStateGeneratorConfig::set_has_e_m0() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E42mStateGeneratorConfig::clear_has_e_m0() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E42mStateGeneratorConfig::clear_e_m0() {
  e_m0_ = 0;
  clear_has_e_m0();
}
inline double E42mStateGeneratorConfig::e_m0() const {
  // @@protoc_insertion_point(field_get:pb.E42mStateGeneratorConfig.E_m0)
  return e_m0_;
}
inline void E42mStateGeneratorConfig::set_e_m0(double value) {
  set_has_e_m0();
  e_m0_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mStateGeneratorConfig.E_m0)
}

// required double phi_m0 = 5;
inline bool E42mStateGeneratorConfig::has_phi_m0() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E42mStateGeneratorConfig::set_has_phi_m0() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E42mStateGeneratorConfig::clear_has_phi_m0() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E42mStateGeneratorConfig::clear_phi_m0() {
  phi_m0_ = 0;
  clear_has_phi_m0();
}
inline double E42mStateGeneratorConfig::phi_m0() const {
  // @@protoc_insertion_point(field_get:pb.E42mStateGeneratorConfig.phi_m0)
  return phi_m0_;
}
inline void E42mStateGeneratorConfig::set_phi_m0(double value) {
  set_has_phi_m0();
  phi_m0_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mStateGeneratorConfig.phi_m0)
}

// -------------------------------------------------------------------

// E42mModel

// required .pb.E42mConfig pconfig = 1;
inline bool E42mModel::has_pconfig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mModel::set_has_pconfig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mModel::clear_has_pconfig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mModel::clear_pconfig() {
  if (pconfig_ != NULL) pconfig_->::pb::E42mConfig::Clear();
  clear_has_pconfig();
}
inline const ::pb::E42mConfig& E42mModel::pconfig() const {
  // @@protoc_insertion_point(field_get:pb.E42mModel.pconfig)
  return pconfig_ != NULL ? *pconfig_ : *default_instance_->pconfig_;
}
inline ::pb::E42mConfig* E42mModel::mutable_pconfig() {
  set_has_pconfig();
  if (pconfig_ == NULL) pconfig_ = new ::pb::E42mConfig;
  // @@protoc_insertion_point(field_mutable:pb.E42mModel.pconfig)
  return pconfig_;
}
inline ::pb::E42mConfig* E42mModel::release_pconfig() {
  clear_has_pconfig();
  ::pb::E42mConfig* temp = pconfig_;
  pconfig_ = NULL;
  return temp;
}
inline void E42mModel::set_allocated_pconfig(::pb::E42mConfig* pconfig) {
  delete pconfig_;
  pconfig_ = pconfig;
  if (pconfig) {
    set_has_pconfig();
  } else {
    clear_has_pconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E42mModel.pconfig)
}

// required .pb.E42mState state = 2;
inline bool E42mModel::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mModel::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mModel::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mModel::clear_state() {
  if (state_ != NULL) state_->::pb::E42mState::Clear();
  clear_has_state();
}
inline const ::pb::E42mState& E42mModel::state() const {
  // @@protoc_insertion_point(field_get:pb.E42mModel.state)
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::pb::E42mState* E42mModel::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::pb::E42mState;
  // @@protoc_insertion_point(field_mutable:pb.E42mModel.state)
  return state_;
}
inline ::pb::E42mState* E42mModel::release_state() {
  clear_has_state();
  ::pb::E42mState* temp = state_;
  state_ = NULL;
  return temp;
}
inline void E42mModel::set_allocated_state(::pb::E42mState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E42mModel.state)
}

// required .pb.EXPetscSolverConfig sconfig = 3;
inline bool E42mModel::has_sconfig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E42mModel::set_has_sconfig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E42mModel::clear_has_sconfig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E42mModel::clear_sconfig() {
  if (sconfig_ != NULL) sconfig_->::pb::EXPetscSolverConfig::Clear();
  clear_has_sconfig();
}
inline const ::pb::EXPetscSolverConfig& E42mModel::sconfig() const {
  // @@protoc_insertion_point(field_get:pb.E42mModel.sconfig)
  return sconfig_ != NULL ? *sconfig_ : *default_instance_->sconfig_;
}
inline ::pb::EXPetscSolverConfig* E42mModel::mutable_sconfig() {
  set_has_sconfig();
  if (sconfig_ == NULL) sconfig_ = new ::pb::EXPetscSolverConfig;
  // @@protoc_insertion_point(field_mutable:pb.E42mModel.sconfig)
  return sconfig_;
}
inline ::pb::EXPetscSolverConfig* E42mModel::release_sconfig() {
  clear_has_sconfig();
  ::pb::EXPetscSolverConfig* temp = sconfig_;
  sconfig_ = NULL;
  return temp;
}
inline void E42mModel::set_allocated_sconfig(::pb::EXPetscSolverConfig* sconfig) {
  delete sconfig_;
  sconfig_ = sconfig;
  if (sconfig) {
    set_has_sconfig();
  } else {
    clear_has_sconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E42mModel.sconfig)
}

// -------------------------------------------------------------------

// E42mSolution

// required .pb.E42mState state = 1;
inline bool E42mSolution::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mSolution::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mSolution::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mSolution::clear_state() {
  if (state_ != NULL) state_->::pb::E42mState::Clear();
  clear_has_state();
}
inline const ::pb::E42mState& E42mSolution::state() const {
  // @@protoc_insertion_point(field_get:pb.E42mSolution.state)
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::pb::E42mState* E42mSolution::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::pb::E42mState;
  // @@protoc_insertion_point(field_mutable:pb.E42mSolution.state)
  return state_;
}
inline ::pb::E42mState* E42mSolution::release_state() {
  clear_has_state();
  ::pb::E42mState* temp = state_;
  state_ = NULL;
  return temp;
}
inline void E42mSolution::set_allocated_state(::pb::E42mState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E42mSolution.state)
}

// optional .pb.E42mState d_state = 2;
inline bool E42mSolution::has_d_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mSolution::set_has_d_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mSolution::clear_has_d_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mSolution::clear_d_state() {
  if (d_state_ != NULL) d_state_->::pb::E42mState::Clear();
  clear_has_d_state();
}
inline const ::pb::E42mState& E42mSolution::d_state() const {
  // @@protoc_insertion_point(field_get:pb.E42mSolution.d_state)
  return d_state_ != NULL ? *d_state_ : *default_instance_->d_state_;
}
inline ::pb::E42mState* E42mSolution::mutable_d_state() {
  set_has_d_state();
  if (d_state_ == NULL) d_state_ = new ::pb::E42mState;
  // @@protoc_insertion_point(field_mutable:pb.E42mSolution.d_state)
  return d_state_;
}
inline ::pb::E42mState* E42mSolution::release_d_state() {
  clear_has_d_state();
  ::pb::E42mState* temp = d_state_;
  d_state_ = NULL;
  return temp;
}
inline void E42mSolution::set_allocated_d_state(::pb::E42mState* d_state) {
  delete d_state_;
  d_state_ = d_state;
  if (d_state) {
    set_has_d_state();
  } else {
    clear_has_d_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E42mSolution.d_state)
}

// -------------------------------------------------------------------

// E42mSpecial_Hist

// required double x = 14;
inline bool E42mSpecial_Hist::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mSpecial_Hist::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mSpecial_Hist::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mSpecial_Hist::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double E42mSpecial_Hist::x() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Hist.x)
  return x_;
}
inline void E42mSpecial_Hist::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Hist.x)
}

// required double y = 15;
inline bool E42mSpecial_Hist::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mSpecial_Hist::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mSpecial_Hist::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mSpecial_Hist::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double E42mSpecial_Hist::y() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Hist.y)
  return y_;
}
inline void E42mSpecial_Hist::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Hist.y)
}

// -------------------------------------------------------------------

// E42mSpecial

// optional double e_p_2 = 1;
inline bool E42mSpecial::has_e_p_2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E42mSpecial::set_has_e_p_2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E42mSpecial::clear_has_e_p_2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E42mSpecial::clear_e_p_2() {
  e_p_2_ = 0;
  clear_has_e_p_2();
}
inline double E42mSpecial::e_p_2() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.e_p_2)
  return e_p_2_;
}
inline void E42mSpecial::set_e_p_2(double value) {
  set_has_e_p_2();
  e_p_2_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.e_p_2)
}

// optional double e_m_2 = 16;
inline bool E42mSpecial::has_e_m_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E42mSpecial::set_has_e_m_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E42mSpecial::clear_has_e_m_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E42mSpecial::clear_e_m_2() {
  e_m_2_ = 0;
  clear_has_e_m_2();
}
inline double E42mSpecial::e_m_2() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.e_m_2)
  return e_m_2_;
}
inline void E42mSpecial::set_e_m_2(double value) {
  set_has_e_m_2();
  e_m_2_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.e_m_2)
}

// optional double aver_a_2 = 2;
inline bool E42mSpecial::has_aver_a_2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E42mSpecial::set_has_aver_a_2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E42mSpecial::clear_has_aver_a_2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E42mSpecial::clear_aver_a_2() {
  aver_a_2_ = 0;
  clear_has_aver_a_2();
}
inline double E42mSpecial::aver_a_2() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.aver_a_2)
  return aver_a_2_;
}
inline void E42mSpecial::set_aver_a_2(double value) {
  set_has_aver_a_2();
  aver_a_2_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.aver_a_2)
}

// optional double int_e_a = 4;
inline bool E42mSpecial::has_int_e_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E42mSpecial::set_has_int_e_a() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E42mSpecial::clear_has_int_e_a() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E42mSpecial::clear_int_e_a() {
  int_e_a_ = 0;
  clear_has_int_e_a();
}
inline double E42mSpecial::int_e_a() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.int_e_a)
  return int_e_a_;
}
inline void E42mSpecial::set_int_e_a(double value) {
  set_has_int_e_a();
  int_e_a_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.int_e_a)
}

// optional double Na = 5;
inline bool E42mSpecial::has_na() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void E42mSpecial::set_has_na() {
  _has_bits_[0] |= 0x00000010u;
}
inline void E42mSpecial::clear_has_na() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void E42mSpecial::clear_na() {
  na_ = 0;
  clear_has_na();
}
inline double E42mSpecial::na() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Na)
  return na_;
}
inline void E42mSpecial::set_na(double value) {
  set_has_na();
  na_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Na)
}

// optional double Nb = 6;
inline bool E42mSpecial::has_nb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void E42mSpecial::set_has_nb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void E42mSpecial::clear_has_nb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void E42mSpecial::clear_nb() {
  nb_ = 0;
  clear_has_nb();
}
inline double E42mSpecial::nb() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Nb)
  return nb_;
}
inline void E42mSpecial::set_nb(double value) {
  set_has_nb();
  nb_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Nb)
}

// optional double M = 17;
inline bool E42mSpecial::has_m() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void E42mSpecial::set_has_m() {
  _has_bits_[0] |= 0x00000040u;
}
inline void E42mSpecial::clear_has_m() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void E42mSpecial::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline double E42mSpecial::m() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.M)
  return m_;
}
inline void E42mSpecial::set_m(double value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.M)
}

// optional double N = 18;
inline bool E42mSpecial::has_n() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void E42mSpecial::set_has_n() {
  _has_bits_[0] |= 0x00000080u;
}
inline void E42mSpecial::clear_has_n() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void E42mSpecial::clear_n() {
  n_ = 0;
  clear_has_n();
}
inline double E42mSpecial::n() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.N)
  return n_;
}
inline void E42mSpecial::set_n(double value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.N)
}

// optional double Ia = 7;
inline bool E42mSpecial::has_ia() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void E42mSpecial::set_has_ia() {
  _has_bits_[0] |= 0x00000100u;
}
inline void E42mSpecial::clear_has_ia() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void E42mSpecial::clear_ia() {
  ia_ = 0;
  clear_has_ia();
}
inline double E42mSpecial::ia() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Ia)
  return ia_;
}
inline void E42mSpecial::set_ia(double value) {
  set_has_ia();
  ia_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Ia)
}

// optional double Ib = 8;
inline bool E42mSpecial::has_ib() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void E42mSpecial::set_has_ib() {
  _has_bits_[0] |= 0x00000200u;
}
inline void E42mSpecial::clear_has_ib() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void E42mSpecial::clear_ib() {
  ib_ = 0;
  clear_has_ib();
}
inline double E42mSpecial::ib() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Ib)
  return ib_;
}
inline void E42mSpecial::set_ib(double value) {
  set_has_ib();
  ib_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Ib)
}

// optional double Ia_aver = 9;
inline bool E42mSpecial::has_ia_aver() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void E42mSpecial::set_has_ia_aver() {
  _has_bits_[0] |= 0x00000400u;
}
inline void E42mSpecial::clear_has_ia_aver() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void E42mSpecial::clear_ia_aver() {
  ia_aver_ = 0;
  clear_has_ia_aver();
}
inline double E42mSpecial::ia_aver() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Ia_aver)
  return ia_aver_;
}
inline void E42mSpecial::set_ia_aver(double value) {
  set_has_ia_aver();
  ia_aver_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Ia_aver)
}

// optional double Ib_aver = 10;
inline bool E42mSpecial::has_ib_aver() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void E42mSpecial::set_has_ib_aver() {
  _has_bits_[0] |= 0x00000800u;
}
inline void E42mSpecial::clear_has_ib_aver() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void E42mSpecial::clear_ib_aver() {
  ib_aver_ = 0;
  clear_has_ib_aver();
}
inline double E42mSpecial::ib_aver() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Ib_aver)
  return ib_aver_;
}
inline void E42mSpecial::set_ib_aver(double value) {
  set_has_ib_aver();
  ib_aver_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Ib_aver)
}

// optional double Wa = 11;
inline bool E42mSpecial::has_wa() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void E42mSpecial::set_has_wa() {
  _has_bits_[0] |= 0x00001000u;
}
inline void E42mSpecial::clear_has_wa() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void E42mSpecial::clear_wa() {
  wa_ = 0;
  clear_has_wa();
}
inline double E42mSpecial::wa() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Wa)
  return wa_;
}
inline void E42mSpecial::set_wa(double value) {
  set_has_wa();
  wa_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Wa)
}

// optional double Wb = 12;
inline bool E42mSpecial::has_wb() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void E42mSpecial::set_has_wb() {
  _has_bits_[0] |= 0x00002000u;
}
inline void E42mSpecial::clear_has_wb() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void E42mSpecial::clear_wb() {
  wb_ = 0;
  clear_has_wb();
}
inline double E42mSpecial::wb() const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.Wb)
  return wb_;
}
inline void E42mSpecial::set_wb(double value) {
  set_has_wb();
  wb_ = value;
  // @@protoc_insertion_point(field_set:pb.E42mSpecial.Wb)
}

// repeated group Hist = 13 {
inline int E42mSpecial::hist_size() const {
  return hist_.size();
}
inline void E42mSpecial::clear_hist() {
  hist_.Clear();
}
inline const ::pb::E42mSpecial_Hist& E42mSpecial::hist(int index) const {
  // @@protoc_insertion_point(field_get:pb.E42mSpecial.hist)
  return hist_.Get(index);
}
inline ::pb::E42mSpecial_Hist* E42mSpecial::mutable_hist(int index) {
  // @@protoc_insertion_point(field_mutable:pb.E42mSpecial.hist)
  return hist_.Mutable(index);
}
inline ::pb::E42mSpecial_Hist* E42mSpecial::add_hist() {
  // @@protoc_insertion_point(field_add:pb.E42mSpecial.hist)
  return hist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::E42mSpecial_Hist >&
E42mSpecial::hist() const {
  // @@protoc_insertion_point(field_list:pb.E42mSpecial.hist)
  return hist_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::E42mSpecial_Hist >*
E42mSpecial::mutable_hist() {
  // @@protoc_insertion_point(field_mutable_list:pb.E42mSpecial.hist)
  return &hist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_5fe42m_2eproto__INCLUDED
