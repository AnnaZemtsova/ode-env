// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_e5.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model_e5.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* E5Config_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E5Config_reflection_ = NULL;
const ::google::protobuf::Descriptor* E5State_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E5State_reflection_ = NULL;
const ::google::protobuf::Descriptor* E5State_Particles_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E5State_Particles_reflection_ = NULL;
const ::google::protobuf::Descriptor* E5State_Fields_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E5State_Fields_reflection_ = NULL;
const ::google::protobuf::Descriptor* E5StateGeneratorConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E5StateGeneratorConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* E5Model_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E5Model_reflection_ = NULL;
const ::google::protobuf::Descriptor* E5Solution_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E5Solution_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_model_5fe5_2eproto() {
  protobuf_AddDesc_model_5fe5_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "model_e5.proto");
  GOOGLE_CHECK(file != NULL);
  E5Config_descriptor_ = file->message_type(0);
  static const int E5Config_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Config, n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Config, e0_),
  };
  E5Config_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E5Config_descriptor_,
      E5Config::default_instance_,
      E5Config_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Config, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Config, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E5Config));
  E5State_descriptor_ = file->message_type(1);
  static const int E5State_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State, particles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State, fields_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State, a0_),
  };
  E5State_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E5State_descriptor_,
      E5State::default_instance_,
      E5State_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E5State));
  E5State_Particles_descriptor_ = E5State_descriptor_->nested_type(0);
  static const int E5State_Particles_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Particles, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Particles, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Particles, z_),
  };
  E5State_Particles_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E5State_Particles_descriptor_,
      E5State_Particles::default_instance_,
      E5State_Particles_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Particles, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Particles, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E5State_Particles));
  E5State_Fields_descriptor_ = E5State_descriptor_->nested_type(1);
  static const int E5State_Fields_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Fields, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Fields, y_),
  };
  E5State_Fields_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E5State_Fields_descriptor_,
      E5State_Fields::default_instance_,
      E5State_Fields_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Fields, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5State_Fields, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E5State_Fields));
  E5StateGeneratorConfig_descriptor_ = file->message_type(2);
  static const int E5StateGeneratorConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5StateGeneratorConfig, a0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5StateGeneratorConfig, e0_),
  };
  E5StateGeneratorConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E5StateGeneratorConfig_descriptor_,
      E5StateGeneratorConfig::default_instance_,
      E5StateGeneratorConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5StateGeneratorConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5StateGeneratorConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E5StateGeneratorConfig));
  E5Model_descriptor_ = file->message_type(3);
  static const int E5Model_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Model, pconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Model, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Model, sconfig_),
  };
  E5Model_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E5Model_descriptor_,
      E5Model::default_instance_,
      E5Model_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Model, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Model, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E5Model));
  E5Solution_descriptor_ = file->message_type(4);
  static const int E5Solution_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Solution, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Solution, d_state_),
  };
  E5Solution_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E5Solution_descriptor_,
      E5Solution::default_instance_,
      E5Solution_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Solution, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E5Solution, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E5Solution));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_model_5fe5_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E5Config_descriptor_, &E5Config::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E5State_descriptor_, &E5State::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E5State_Particles_descriptor_, &E5State_Particles::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E5State_Fields_descriptor_, &E5State_Fields::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E5StateGeneratorConfig_descriptor_, &E5StateGeneratorConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E5Model_descriptor_, &E5Model::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E5Solution_descriptor_, &E5Solution::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_model_5fe5_2eproto() {
  delete E5Config::default_instance_;
  delete E5Config_reflection_;
  delete E5State::default_instance_;
  delete E5State_reflection_;
  delete E5State_Particles::default_instance_;
  delete E5State_Particles_reflection_;
  delete E5State_Fields::default_instance_;
  delete E5State_Fields_reflection_;
  delete E5StateGeneratorConfig::default_instance_;
  delete E5StateGeneratorConfig_reflection_;
  delete E5Model::default_instance_;
  delete E5Model_reflection_;
  delete E5Solution::default_instance_;
  delete E5Solution_reflection_;
}

void protobuf_AddDesc_model_5fe5_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016model_e5.proto\022\002pb\032\014common.proto\"!\n\010E5"
    "Config\022\t\n\001N\030\001 \002(\r\022\n\n\002E0\030\002 \001(\001\"\261\001\n\007E5Stat"
    "e\022(\n\tparticles\030\001 \003(\n2\025.pb.E5State.Partic"
    "les\022\"\n\006fields\030\005 \003(\n2\022.pb.E5State.Fields\022"
    "\n\n\002A0\030\010 \001(\001\032,\n\tParticles\022\t\n\001x\030\002 \002(\001\022\t\n\001y"
    "\030\003 \002(\001\022\t\n\001z\030\004 \002(\001\032\036\n\006Fields\022\t\n\001x\030\006 \002(\001\022\t"
    "\n\001y\030\007 \002(\001\"0\n\026E5StateGeneratorConfig\022\n\n\002A"
    "0\030\001 \002(\001\022\n\n\002E0\030\002 \001(\001\"n\n\007E5Model\022\035\n\007pconfi"
    "g\030\001 \002(\0132\014.pb.E5Config\022\032\n\005state\030\002 \002(\0132\013.p"
    "b.E5State\022(\n\007sconfig\030\003 \002(\0132\027.pb.EXPetscS"
    "olverConfig\"F\n\nE5Solution\022\032\n\005state\030\001 \002(\013"
    "2\013.pb.E5State\022\034\n\007d_state\030\002 \001(\0132\013.pb.E5St"
    "ate", 483);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model_e5.proto", &protobuf_RegisterTypes);
  E5Config::default_instance_ = new E5Config();
  E5State::default_instance_ = new E5State();
  E5State_Particles::default_instance_ = new E5State_Particles();
  E5State_Fields::default_instance_ = new E5State_Fields();
  E5StateGeneratorConfig::default_instance_ = new E5StateGeneratorConfig();
  E5Model::default_instance_ = new E5Model();
  E5Solution::default_instance_ = new E5Solution();
  E5Config::default_instance_->InitAsDefaultInstance();
  E5State::default_instance_->InitAsDefaultInstance();
  E5State_Particles::default_instance_->InitAsDefaultInstance();
  E5State_Fields::default_instance_->InitAsDefaultInstance();
  E5StateGeneratorConfig::default_instance_->InitAsDefaultInstance();
  E5Model::default_instance_->InitAsDefaultInstance();
  E5Solution::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_model_5fe5_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_model_5fe5_2eproto {
  StaticDescriptorInitializer_model_5fe5_2eproto() {
    protobuf_AddDesc_model_5fe5_2eproto();
  }
} static_descriptor_initializer_model_5fe5_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E5Config::kNFieldNumber;
const int E5Config::kE0FieldNumber;
#endif  // !_MSC_VER

E5Config::E5Config()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E5Config)
}

void E5Config::InitAsDefaultInstance() {
}

E5Config::E5Config(const E5Config& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E5Config)
}

void E5Config::SharedCtor() {
  _cached_size_ = 0;
  n_ = 0u;
  e0_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E5Config::~E5Config() {
  // @@protoc_insertion_point(destructor:pb.E5Config)
  SharedDtor();
}

void E5Config::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E5Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E5Config::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E5Config_descriptor_;
}

const E5Config& E5Config::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe5_2eproto();
  return *default_instance_;
}

E5Config* E5Config::default_instance_ = NULL;

E5Config* E5Config::New() const {
  return new E5Config;
}

void E5Config::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E5Config*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(e0_, n_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E5Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E5Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 N = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &n_)));
          set_has_n();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_E0;
        break;
      }

      // optional double E0 = 2;
      case 2: {
        if (tag == 17) {
         parse_E0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e0_)));
          set_has_e0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E5Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E5Config)
  return false;
#undef DO_
}

void E5Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E5Config)
  // required uint32 N = 1;
  if (has_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->n(), output);
  }

  // optional double E0 = 2;
  if (has_e0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->e0(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E5Config)
}

::google::protobuf::uint8* E5Config::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E5Config)
  // required uint32 N = 1;
  if (has_n()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->n(), target);
  }

  // optional double E0 = 2;
  if (has_e0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->e0(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E5Config)
  return target;
}

int E5Config::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 N = 1;
    if (has_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->n());
    }

    // optional double E0 = 2;
    if (has_e0()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E5Config::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E5Config* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E5Config*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E5Config::MergeFrom(const E5Config& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_n()) {
      set_n(from.n());
    }
    if (from.has_e0()) {
      set_e0(from.e0());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E5Config::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E5Config::CopyFrom(const E5Config& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E5Config::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void E5Config::Swap(E5Config* other) {
  if (other != this) {
    std::swap(n_, other->n_);
    std::swap(e0_, other->e0_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E5Config::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E5Config_descriptor_;
  metadata.reflection = E5Config_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E5State_Particles::kXFieldNumber;
const int E5State_Particles::kYFieldNumber;
const int E5State_Particles::kZFieldNumber;
#endif  // !_MSC_VER

E5State_Particles::E5State_Particles()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E5State.Particles)
}

void E5State_Particles::InitAsDefaultInstance() {
}

E5State_Particles::E5State_Particles(const E5State_Particles& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E5State.Particles)
}

void E5State_Particles::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E5State_Particles::~E5State_Particles() {
  // @@protoc_insertion_point(destructor:pb.E5State.Particles)
  SharedDtor();
}

void E5State_Particles::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E5State_Particles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E5State_Particles::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E5State_Particles_descriptor_;
}

const E5State_Particles& E5State_Particles::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe5_2eproto();
  return *default_instance_;
}

E5State_Particles* E5State_Particles::default_instance_ = NULL;

E5State_Particles* E5State_Particles::New() const {
  return new E5State_Particles;
}

void E5State_Particles::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E5State_Particles*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, z_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E5State_Particles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E5State.Particles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 2;
      case 2: {
        if (tag == 17) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_y;
        break;
      }

      // required double y = 3;
      case 3: {
        if (tag == 25) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_z;
        break;
      }

      // required double z = 4;
      case 4: {
        if (tag == 33) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E5State.Particles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E5State.Particles)
  return false;
#undef DO_
}

void E5State_Particles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E5State.Particles)
  // required double x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // required double y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // required double z = 4;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->z(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E5State.Particles)
}

::google::protobuf::uint8* E5State_Particles::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E5State.Particles)
  // required double x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // required double y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // required double z = 4;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->z(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E5State.Particles)
  return target;
}

int E5State_Particles::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 2;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 3;
    if (has_y()) {
      total_size += 1 + 8;
    }

    // required double z = 4;
    if (has_z()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E5State_Particles::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E5State_Particles* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E5State_Particles*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E5State_Particles::MergeFrom(const E5State_Particles& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E5State_Particles::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E5State_Particles::CopyFrom(const E5State_Particles& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E5State_Particles::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void E5State_Particles::Swap(E5State_Particles* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E5State_Particles::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E5State_Particles_descriptor_;
  metadata.reflection = E5State_Particles_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int E5State_Fields::kXFieldNumber;
const int E5State_Fields::kYFieldNumber;
#endif  // !_MSC_VER

E5State_Fields::E5State_Fields()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E5State.Fields)
}

void E5State_Fields::InitAsDefaultInstance() {
}

E5State_Fields::E5State_Fields(const E5State_Fields& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E5State.Fields)
}

void E5State_Fields::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E5State_Fields::~E5State_Fields() {
  // @@protoc_insertion_point(destructor:pb.E5State.Fields)
  SharedDtor();
}

void E5State_Fields::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E5State_Fields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E5State_Fields::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E5State_Fields_descriptor_;
}

const E5State_Fields& E5State_Fields::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe5_2eproto();
  return *default_instance_;
}

E5State_Fields* E5State_Fields::default_instance_ = NULL;

E5State_Fields* E5State_Fields::New() const {
  return new E5State_Fields;
}

void E5State_Fields::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E5State_Fields*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E5State_Fields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E5State.Fields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 6;
      case 6: {
        if (tag == 49) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_y;
        break;
      }

      // required double y = 7;
      case 7: {
        if (tag == 57) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E5State.Fields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E5State.Fields)
  return false;
#undef DO_
}

void E5State_Fields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E5State.Fields)
  // required double x = 6;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->x(), output);
  }

  // required double y = 7;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E5State.Fields)
}

::google::protobuf::uint8* E5State_Fields::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E5State.Fields)
  // required double x = 6;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->x(), target);
  }

  // required double y = 7;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E5State.Fields)
  return target;
}

int E5State_Fields::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 6;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 7;
    if (has_y()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E5State_Fields::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E5State_Fields* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E5State_Fields*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E5State_Fields::MergeFrom(const E5State_Fields& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E5State_Fields::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E5State_Fields::CopyFrom(const E5State_Fields& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E5State_Fields::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void E5State_Fields::Swap(E5State_Fields* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E5State_Fields::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E5State_Fields_descriptor_;
  metadata.reflection = E5State_Fields_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int E5State::kParticlesFieldNumber;
const int E5State::kFieldsFieldNumber;
const int E5State::kA0FieldNumber;
#endif  // !_MSC_VER

E5State::E5State()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E5State)
}

void E5State::InitAsDefaultInstance() {
}

E5State::E5State(const E5State& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E5State)
}

void E5State::SharedCtor() {
  _cached_size_ = 0;
  a0_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E5State::~E5State() {
  // @@protoc_insertion_point(destructor:pb.E5State)
  SharedDtor();
}

void E5State::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E5State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E5State::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E5State_descriptor_;
}

const E5State& E5State::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe5_2eproto();
  return *default_instance_;
}

E5State* E5State::default_instance_ = NULL;

E5State* E5State::New() const {
  return new E5State;
}

void E5State::Clear() {
  a0_ = 0;
  particles_.Clear();
  fields_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E5State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E5State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated group Particles = 1 {
      case 1: {
        if (tag == 11) {
         parse_particles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                1, input, add_particles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(11)) goto parse_particles;
        if (input->ExpectTag(43)) goto parse_fields;
        break;
      }

      // repeated group Fields = 5 {
      case 5: {
        if (tag == 43) {
         parse_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                5, input, add_fields()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(43)) goto parse_fields;
        if (input->ExpectTag(65)) goto parse_A0;
        break;
      }

      // optional double A0 = 8;
      case 8: {
        if (tag == 65) {
         parse_A0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a0_)));
          set_has_a0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E5State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E5State)
  return false;
#undef DO_
}

void E5State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E5State)
  // repeated group Particles = 1 {
  for (int i = 0; i < this->particles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      1, this->particles(i), output);
  }

  // repeated group Fields = 5 {
  for (int i = 0; i < this->fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      5, this->fields(i), output);
  }

  // optional double A0 = 8;
  if (has_a0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->a0(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E5State)
}

::google::protobuf::uint8* E5State::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E5State)
  // repeated group Particles = 1 {
  for (int i = 0; i < this->particles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        1, this->particles(i), target);
  }

  // repeated group Fields = 5 {
  for (int i = 0; i < this->fields_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        5, this->fields(i), target);
  }

  // optional double A0 = 8;
  if (has_a0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->a0(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E5State)
  return target;
}

int E5State::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional double A0 = 8;
    if (has_a0()) {
      total_size += 1 + 8;
    }

  }
  // repeated group Particles = 1 {
  total_size += 2 * this->particles_size();
  for (int i = 0; i < this->particles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->particles(i));
  }

  // repeated group Fields = 5 {
  total_size += 2 * this->fields_size();
  for (int i = 0; i < this->fields_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->fields(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E5State::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E5State* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E5State*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E5State::MergeFrom(const E5State& from) {
  GOOGLE_CHECK_NE(&from, this);
  particles_.MergeFrom(from.particles_);
  fields_.MergeFrom(from.fields_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_a0()) {
      set_a0(from.a0());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E5State::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E5State::CopyFrom(const E5State& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E5State::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->particles())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fields())) return false;
  return true;
}

void E5State::Swap(E5State* other) {
  if (other != this) {
    particles_.Swap(&other->particles_);
    fields_.Swap(&other->fields_);
    std::swap(a0_, other->a0_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E5State::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E5State_descriptor_;
  metadata.reflection = E5State_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E5StateGeneratorConfig::kA0FieldNumber;
const int E5StateGeneratorConfig::kE0FieldNumber;
#endif  // !_MSC_VER

E5StateGeneratorConfig::E5StateGeneratorConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E5StateGeneratorConfig)
}

void E5StateGeneratorConfig::InitAsDefaultInstance() {
}

E5StateGeneratorConfig::E5StateGeneratorConfig(const E5StateGeneratorConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E5StateGeneratorConfig)
}

void E5StateGeneratorConfig::SharedCtor() {
  _cached_size_ = 0;
  a0_ = 0;
  e0_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E5StateGeneratorConfig::~E5StateGeneratorConfig() {
  // @@protoc_insertion_point(destructor:pb.E5StateGeneratorConfig)
  SharedDtor();
}

void E5StateGeneratorConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E5StateGeneratorConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E5StateGeneratorConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E5StateGeneratorConfig_descriptor_;
}

const E5StateGeneratorConfig& E5StateGeneratorConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe5_2eproto();
  return *default_instance_;
}

E5StateGeneratorConfig* E5StateGeneratorConfig::default_instance_ = NULL;

E5StateGeneratorConfig* E5StateGeneratorConfig::New() const {
  return new E5StateGeneratorConfig;
}

void E5StateGeneratorConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E5StateGeneratorConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(a0_, e0_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E5StateGeneratorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E5StateGeneratorConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double A0 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a0_)));
          set_has_a0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_E0;
        break;
      }

      // optional double E0 = 2;
      case 2: {
        if (tag == 17) {
         parse_E0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e0_)));
          set_has_e0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E5StateGeneratorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E5StateGeneratorConfig)
  return false;
#undef DO_
}

void E5StateGeneratorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E5StateGeneratorConfig)
  // required double A0 = 1;
  if (has_a0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->a0(), output);
  }

  // optional double E0 = 2;
  if (has_e0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->e0(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E5StateGeneratorConfig)
}

::google::protobuf::uint8* E5StateGeneratorConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E5StateGeneratorConfig)
  // required double A0 = 1;
  if (has_a0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->a0(), target);
  }

  // optional double E0 = 2;
  if (has_e0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->e0(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E5StateGeneratorConfig)
  return target;
}

int E5StateGeneratorConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double A0 = 1;
    if (has_a0()) {
      total_size += 1 + 8;
    }

    // optional double E0 = 2;
    if (has_e0()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E5StateGeneratorConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E5StateGeneratorConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E5StateGeneratorConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E5StateGeneratorConfig::MergeFrom(const E5StateGeneratorConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a0()) {
      set_a0(from.a0());
    }
    if (from.has_e0()) {
      set_e0(from.e0());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E5StateGeneratorConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E5StateGeneratorConfig::CopyFrom(const E5StateGeneratorConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E5StateGeneratorConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void E5StateGeneratorConfig::Swap(E5StateGeneratorConfig* other) {
  if (other != this) {
    std::swap(a0_, other->a0_);
    std::swap(e0_, other->e0_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E5StateGeneratorConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E5StateGeneratorConfig_descriptor_;
  metadata.reflection = E5StateGeneratorConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E5Model::kPconfigFieldNumber;
const int E5Model::kStateFieldNumber;
const int E5Model::kSconfigFieldNumber;
#endif  // !_MSC_VER

E5Model::E5Model()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E5Model)
}

void E5Model::InitAsDefaultInstance() {
  pconfig_ = const_cast< ::pb::E5Config*>(&::pb::E5Config::default_instance());
  state_ = const_cast< ::pb::E5State*>(&::pb::E5State::default_instance());
  sconfig_ = const_cast< ::pb::EXPetscSolverConfig*>(&::pb::EXPetscSolverConfig::default_instance());
}

E5Model::E5Model(const E5Model& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E5Model)
}

void E5Model::SharedCtor() {
  _cached_size_ = 0;
  pconfig_ = NULL;
  state_ = NULL;
  sconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E5Model::~E5Model() {
  // @@protoc_insertion_point(destructor:pb.E5Model)
  SharedDtor();
}

void E5Model::SharedDtor() {
  if (this != default_instance_) {
    delete pconfig_;
    delete state_;
    delete sconfig_;
  }
}

void E5Model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E5Model::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E5Model_descriptor_;
}

const E5Model& E5Model::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe5_2eproto();
  return *default_instance_;
}

E5Model* E5Model::default_instance_ = NULL;

E5Model* E5Model::New() const {
  return new E5Model;
}

void E5Model::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_pconfig()) {
      if (pconfig_ != NULL) pconfig_->::pb::E5Config::Clear();
    }
    if (has_state()) {
      if (state_ != NULL) state_->::pb::E5State::Clear();
    }
    if (has_sconfig()) {
      if (sconfig_ != NULL) sconfig_->::pb::EXPetscSolverConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E5Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E5Model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.E5Config pconfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_state;
        break;
      }

      // required .pb.E5State state = 2;
      case 2: {
        if (tag == 18) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sconfig;
        break;
      }

      // required .pb.EXPetscSolverConfig sconfig = 3;
      case 3: {
        if (tag == 26) {
         parse_sconfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E5Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E5Model)
  return false;
#undef DO_
}

void E5Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E5Model)
  // required .pb.E5Config pconfig = 1;
  if (has_pconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pconfig(), output);
  }

  // required .pb.E5State state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->state(), output);
  }

  // required .pb.EXPetscSolverConfig sconfig = 3;
  if (has_sconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->sconfig(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E5Model)
}

::google::protobuf::uint8* E5Model::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E5Model)
  // required .pb.E5Config pconfig = 1;
  if (has_pconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pconfig(), target);
  }

  // required .pb.E5State state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->state(), target);
  }

  // required .pb.EXPetscSolverConfig sconfig = 3;
  if (has_sconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->sconfig(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E5Model)
  return target;
}

int E5Model::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pb.E5Config pconfig = 1;
    if (has_pconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pconfig());
    }

    // required .pb.E5State state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->state());
    }

    // required .pb.EXPetscSolverConfig sconfig = 3;
    if (has_sconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sconfig());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E5Model::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E5Model* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E5Model*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E5Model::MergeFrom(const E5Model& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pconfig()) {
      mutable_pconfig()->::pb::E5Config::MergeFrom(from.pconfig());
    }
    if (from.has_state()) {
      mutable_state()->::pb::E5State::MergeFrom(from.state());
    }
    if (from.has_sconfig()) {
      mutable_sconfig()->::pb::EXPetscSolverConfig::MergeFrom(from.sconfig());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E5Model::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E5Model::CopyFrom(const E5Model& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E5Model::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_pconfig()) {
    if (!this->pconfig().IsInitialized()) return false;
  }
  if (has_state()) {
    if (!this->state().IsInitialized()) return false;
  }
  return true;
}

void E5Model::Swap(E5Model* other) {
  if (other != this) {
    std::swap(pconfig_, other->pconfig_);
    std::swap(state_, other->state_);
    std::swap(sconfig_, other->sconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E5Model::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E5Model_descriptor_;
  metadata.reflection = E5Model_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E5Solution::kStateFieldNumber;
const int E5Solution::kDStateFieldNumber;
#endif  // !_MSC_VER

E5Solution::E5Solution()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E5Solution)
}

void E5Solution::InitAsDefaultInstance() {
  state_ = const_cast< ::pb::E5State*>(&::pb::E5State::default_instance());
  d_state_ = const_cast< ::pb::E5State*>(&::pb::E5State::default_instance());
}

E5Solution::E5Solution(const E5Solution& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E5Solution)
}

void E5Solution::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
  d_state_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E5Solution::~E5Solution() {
  // @@protoc_insertion_point(destructor:pb.E5Solution)
  SharedDtor();
}

void E5Solution::SharedDtor() {
  if (this != default_instance_) {
    delete state_;
    delete d_state_;
  }
}

void E5Solution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E5Solution::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E5Solution_descriptor_;
}

const E5Solution& E5Solution::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe5_2eproto();
  return *default_instance_;
}

E5Solution* E5Solution::default_instance_ = NULL;

E5Solution* E5Solution::New() const {
  return new E5Solution;
}

void E5Solution::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_state()) {
      if (state_ != NULL) state_->::pb::E5State::Clear();
    }
    if (has_d_state()) {
      if (d_state_ != NULL) d_state_->::pb::E5State::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E5Solution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E5Solution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.E5State state = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_d_state;
        break;
      }

      // optional .pb.E5State d_state = 2;
      case 2: {
        if (tag == 18) {
         parse_d_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_d_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E5Solution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E5Solution)
  return false;
#undef DO_
}

void E5Solution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E5Solution)
  // required .pb.E5State state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->state(), output);
  }

  // optional .pb.E5State d_state = 2;
  if (has_d_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->d_state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E5Solution)
}

::google::protobuf::uint8* E5Solution::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E5Solution)
  // required .pb.E5State state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->state(), target);
  }

  // optional .pb.E5State d_state = 2;
  if (has_d_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->d_state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E5Solution)
  return target;
}

int E5Solution::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pb.E5State state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->state());
    }

    // optional .pb.E5State d_state = 2;
    if (has_d_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->d_state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E5Solution::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E5Solution* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E5Solution*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E5Solution::MergeFrom(const E5Solution& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      mutable_state()->::pb::E5State::MergeFrom(from.state());
    }
    if (from.has_d_state()) {
      mutable_d_state()->::pb::E5State::MergeFrom(from.d_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E5Solution::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E5Solution::CopyFrom(const E5Solution& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E5Solution::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_state()) {
    if (!this->state().IsInitialized()) return false;
  }
  if (has_d_state()) {
    if (!this->d_state().IsInitialized()) return false;
  }
  return true;
}

void E5Solution::Swap(E5Solution* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(d_state_, other->d_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E5Solution::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E5Solution_descriptor_;
  metadata.reflection = E5Solution_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
