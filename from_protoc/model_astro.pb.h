// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_astro.proto

#ifndef PROTOBUF_model_5fastro_2eproto__INCLUDED
#define PROTOBUF_model_5fastro_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_model_5fastro_2eproto();
void protobuf_AssignDesc_model_5fastro_2eproto();
void protobuf_ShutdownFile_model_5fastro_2eproto();

class AstroConfig;
class AstroState;
class AstroSolverConfig;

// ===================================================================

class AstroConfig : public ::google::protobuf::Message {
 public:
  AstroConfig();
  virtual ~AstroConfig();

  AstroConfig(const AstroConfig& from);

  inline AstroConfig& operator=(const AstroConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AstroConfig& default_instance();

  void Swap(AstroConfig* other);

  // implements Message ----------------------------------------------

  AstroConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AstroConfig& from);
  void MergeFrom(const AstroConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double theta = 1;
  inline bool has_theta() const;
  inline void clear_theta();
  static const int kThetaFieldNumber = 1;
  inline double theta() const;
  inline void set_theta(double value);

  // required double Gamma = 2;
  inline bool has_gamma() const;
  inline void clear_gamma();
  static const int kGammaFieldNumber = 2;
  inline double gamma() const;
  inline void set_gamma(double value);

  // @@protoc_insertion_point(class_scope:pb.AstroConfig)
 private:
  inline void set_has_theta();
  inline void clear_has_theta();
  inline void set_has_gamma();
  inline void clear_has_gamma();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double theta_;
  double gamma_;
  friend void  protobuf_AddDesc_model_5fastro_2eproto();
  friend void protobuf_AssignDesc_model_5fastro_2eproto();
  friend void protobuf_ShutdownFile_model_5fastro_2eproto();

  void InitAsDefaultInstance();
  static AstroConfig* default_instance_;
};
// -------------------------------------------------------------------

class AstroState : public ::google::protobuf::Message {
 public:
  AstroState();
  virtual ~AstroState();

  AstroState(const AstroState& from);

  inline AstroState& operator=(const AstroState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AstroState& default_instance();

  void Swap(AstroState* other);

  // implements Message ----------------------------------------------

  AstroState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AstroState& from);
  void MergeFrom(const AstroState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double M = 1;
  inline bool has_m() const;
  inline void clear_m();
  static const int kMFieldNumber = 1;
  inline double m() const;
  inline void set_m(double value);

  // required double N_inc = 2;
  inline bool has_n_inc() const;
  inline void clear_n_inc();
  static const int kNIncFieldNumber = 2;
  inline double n_inc() const;
  inline void set_n_inc(double value);

  // required double N_c = 3;
  inline bool has_n_c() const;
  inline void clear_n_c();
  static const int kNCFieldNumber = 3;
  inline double n_c() const;
  inline void set_n_c(double value);

  // @@protoc_insertion_point(class_scope:pb.AstroState)
 private:
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_n_inc();
  inline void clear_has_n_inc();
  inline void set_has_n_c();
  inline void clear_has_n_c();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double m_;
  double n_inc_;
  double n_c_;
  friend void  protobuf_AddDesc_model_5fastro_2eproto();
  friend void protobuf_AssignDesc_model_5fastro_2eproto();
  friend void protobuf_ShutdownFile_model_5fastro_2eproto();

  void InitAsDefaultInstance();
  static AstroState* default_instance_;
};
// -------------------------------------------------------------------

class AstroSolverConfig : public ::google::protobuf::Message {
 public:
  AstroSolverConfig();
  virtual ~AstroSolverConfig();

  AstroSolverConfig(const AstroSolverConfig& from);

  inline AstroSolverConfig& operator=(const AstroSolverConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AstroSolverConfig& default_instance();

  void Swap(AstroSolverConfig* other);

  // implements Message ----------------------------------------------

  AstroSolverConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AstroSolverConfig& from);
  void MergeFrom(const AstroSolverConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double step = 1;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline double step() const;
  inline void set_step(double value);

  // @@protoc_insertion_point(class_scope:pb.AstroSolverConfig)
 private:
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double step_;
  friend void  protobuf_AddDesc_model_5fastro_2eproto();
  friend void protobuf_AssignDesc_model_5fastro_2eproto();
  friend void protobuf_ShutdownFile_model_5fastro_2eproto();

  void InitAsDefaultInstance();
  static AstroSolverConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// AstroConfig

// required double theta = 1;
inline bool AstroConfig::has_theta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AstroConfig::set_has_theta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AstroConfig::clear_has_theta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AstroConfig::clear_theta() {
  theta_ = 0;
  clear_has_theta();
}
inline double AstroConfig::theta() const {
  // @@protoc_insertion_point(field_get:pb.AstroConfig.theta)
  return theta_;
}
inline void AstroConfig::set_theta(double value) {
  set_has_theta();
  theta_ = value;
  // @@protoc_insertion_point(field_set:pb.AstroConfig.theta)
}

// required double Gamma = 2;
inline bool AstroConfig::has_gamma() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AstroConfig::set_has_gamma() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AstroConfig::clear_has_gamma() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AstroConfig::clear_gamma() {
  gamma_ = 0;
  clear_has_gamma();
}
inline double AstroConfig::gamma() const {
  // @@protoc_insertion_point(field_get:pb.AstroConfig.Gamma)
  return gamma_;
}
inline void AstroConfig::set_gamma(double value) {
  set_has_gamma();
  gamma_ = value;
  // @@protoc_insertion_point(field_set:pb.AstroConfig.Gamma)
}

// -------------------------------------------------------------------

// AstroState

// required double M = 1;
inline bool AstroState::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AstroState::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AstroState::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AstroState::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline double AstroState::m() const {
  // @@protoc_insertion_point(field_get:pb.AstroState.M)
  return m_;
}
inline void AstroState::set_m(double value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:pb.AstroState.M)
}

// required double N_inc = 2;
inline bool AstroState::has_n_inc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AstroState::set_has_n_inc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AstroState::clear_has_n_inc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AstroState::clear_n_inc() {
  n_inc_ = 0;
  clear_has_n_inc();
}
inline double AstroState::n_inc() const {
  // @@protoc_insertion_point(field_get:pb.AstroState.N_inc)
  return n_inc_;
}
inline void AstroState::set_n_inc(double value) {
  set_has_n_inc();
  n_inc_ = value;
  // @@protoc_insertion_point(field_set:pb.AstroState.N_inc)
}

// required double N_c = 3;
inline bool AstroState::has_n_c() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AstroState::set_has_n_c() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AstroState::clear_has_n_c() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AstroState::clear_n_c() {
  n_c_ = 0;
  clear_has_n_c();
}
inline double AstroState::n_c() const {
  // @@protoc_insertion_point(field_get:pb.AstroState.N_c)
  return n_c_;
}
inline void AstroState::set_n_c(double value) {
  set_has_n_c();
  n_c_ = value;
  // @@protoc_insertion_point(field_set:pb.AstroState.N_c)
}

// -------------------------------------------------------------------

// AstroSolverConfig

// required double step = 1;
inline bool AstroSolverConfig::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AstroSolverConfig::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AstroSolverConfig::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AstroSolverConfig::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline double AstroSolverConfig::step() const {
  // @@protoc_insertion_point(field_get:pb.AstroSolverConfig.step)
  return step_;
}
inline void AstroSolverConfig::set_step(double value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:pb.AstroSolverConfig.step)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_5fastro_2eproto__INCLUDED
