// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_e5.proto

#ifndef PROTOBUF_model_5fe5_2eproto__INCLUDED
#define PROTOBUF_model_5fe5_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_model_5fe5_2eproto();
void protobuf_AssignDesc_model_5fe5_2eproto();
void protobuf_ShutdownFile_model_5fe5_2eproto();

class E5Config;
class E5State;
class E5State_Particles;
class E5State_Fields;
class E5StateGeneratorConfig;
class E5Model;
class E5Solution;

// ===================================================================

class E5Config : public ::google::protobuf::Message {
 public:
  E5Config();
  virtual ~E5Config();

  E5Config(const E5Config& from);

  inline E5Config& operator=(const E5Config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E5Config& default_instance();

  void Swap(E5Config* other);

  // implements Message ----------------------------------------------

  E5Config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E5Config& from);
  void MergeFrom(const E5Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 N = 1;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 1;
  inline ::google::protobuf::uint32 n() const;
  inline void set_n(::google::protobuf::uint32 value);

  // optional double E0 = 2;
  inline bool has_e0() const;
  inline void clear_e0();
  static const int kE0FieldNumber = 2;
  inline double e0() const;
  inline void set_e0(double value);

  // @@protoc_insertion_point(class_scope:pb.E5Config)
 private:
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_e0();
  inline void clear_has_e0();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double e0_;
  ::google::protobuf::uint32 n_;
  friend void  protobuf_AddDesc_model_5fe5_2eproto();
  friend void protobuf_AssignDesc_model_5fe5_2eproto();
  friend void protobuf_ShutdownFile_model_5fe5_2eproto();

  void InitAsDefaultInstance();
  static E5Config* default_instance_;
};
// -------------------------------------------------------------------

class E5State_Particles : public ::google::protobuf::Message {
 public:
  E5State_Particles();
  virtual ~E5State_Particles();

  E5State_Particles(const E5State_Particles& from);

  inline E5State_Particles& operator=(const E5State_Particles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E5State_Particles& default_instance();

  void Swap(E5State_Particles* other);

  // implements Message ----------------------------------------------

  E5State_Particles* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E5State_Particles& from);
  void MergeFrom(const E5State_Particles& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline double x() const;
  inline void set_x(double value);

  // required double y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline double y() const;
  inline void set_y(double value);

  // required double z = 4;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 4;
  inline double z() const;
  inline void set_z(double value);

  // @@protoc_insertion_point(class_scope:pb.E5State.Particles)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  double z_;
  friend void  protobuf_AddDesc_model_5fe5_2eproto();
  friend void protobuf_AssignDesc_model_5fe5_2eproto();
  friend void protobuf_ShutdownFile_model_5fe5_2eproto();

  void InitAsDefaultInstance();
  static E5State_Particles* default_instance_;
};
// -------------------------------------------------------------------

class E5State_Fields : public ::google::protobuf::Message {
 public:
  E5State_Fields();
  virtual ~E5State_Fields();

  E5State_Fields(const E5State_Fields& from);

  inline E5State_Fields& operator=(const E5State_Fields& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E5State_Fields& default_instance();

  void Swap(E5State_Fields* other);

  // implements Message ----------------------------------------------

  E5State_Fields* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E5State_Fields& from);
  void MergeFrom(const E5State_Fields& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 6;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 6;
  inline double x() const;
  inline void set_x(double value);

  // required double y = 7;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 7;
  inline double y() const;
  inline void set_y(double value);

  // @@protoc_insertion_point(class_scope:pb.E5State.Fields)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double x_;
  double y_;
  friend void  protobuf_AddDesc_model_5fe5_2eproto();
  friend void protobuf_AssignDesc_model_5fe5_2eproto();
  friend void protobuf_ShutdownFile_model_5fe5_2eproto();

  void InitAsDefaultInstance();
  static E5State_Fields* default_instance_;
};
// -------------------------------------------------------------------

class E5State : public ::google::protobuf::Message {
 public:
  E5State();
  virtual ~E5State();

  E5State(const E5State& from);

  inline E5State& operator=(const E5State& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E5State& default_instance();

  void Swap(E5State* other);

  // implements Message ----------------------------------------------

  E5State* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E5State& from);
  void MergeFrom(const E5State& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef E5State_Particles Particles;
  typedef E5State_Fields Fields;

  // accessors -------------------------------------------------------

  // repeated group Particles = 1 {
  inline int particles_size() const;
  inline void clear_particles();
  static const int kParticlesFieldNumber = 1;
  inline const ::pb::E5State_Particles& particles(int index) const;
  inline ::pb::E5State_Particles* mutable_particles(int index);
  inline ::pb::E5State_Particles* add_particles();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::E5State_Particles >&
      particles() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::E5State_Particles >*
      mutable_particles();

  // repeated group Fields = 5 {
  inline int fields_size() const;
  inline void clear_fields();
  static const int kFieldsFieldNumber = 5;
  inline const ::pb::E5State_Fields& fields(int index) const;
  inline ::pb::E5State_Fields* mutable_fields(int index);
  inline ::pb::E5State_Fields* add_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::E5State_Fields >&
      fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::E5State_Fields >*
      mutable_fields();

  // optional double A0 = 8;
  inline bool has_a0() const;
  inline void clear_a0();
  static const int kA0FieldNumber = 8;
  inline double a0() const;
  inline void set_a0(double value);

  // @@protoc_insertion_point(class_scope:pb.E5State)
 private:
  inline void set_has_a0();
  inline void clear_has_a0();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::E5State_Particles > particles_;
  ::google::protobuf::RepeatedPtrField< ::pb::E5State_Fields > fields_;
  double a0_;
  friend void  protobuf_AddDesc_model_5fe5_2eproto();
  friend void protobuf_AssignDesc_model_5fe5_2eproto();
  friend void protobuf_ShutdownFile_model_5fe5_2eproto();

  void InitAsDefaultInstance();
  static E5State* default_instance_;
};
// -------------------------------------------------------------------

class E5StateGeneratorConfig : public ::google::protobuf::Message {
 public:
  E5StateGeneratorConfig();
  virtual ~E5StateGeneratorConfig();

  E5StateGeneratorConfig(const E5StateGeneratorConfig& from);

  inline E5StateGeneratorConfig& operator=(const E5StateGeneratorConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E5StateGeneratorConfig& default_instance();

  void Swap(E5StateGeneratorConfig* other);

  // implements Message ----------------------------------------------

  E5StateGeneratorConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E5StateGeneratorConfig& from);
  void MergeFrom(const E5StateGeneratorConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double A0 = 1;
  inline bool has_a0() const;
  inline void clear_a0();
  static const int kA0FieldNumber = 1;
  inline double a0() const;
  inline void set_a0(double value);

  // required double left = 2;
  inline bool has_left() const;
  inline void clear_left();
  static const int kLeftFieldNumber = 2;
  inline double left() const;
  inline void set_left(double value);

  // required double right = 3;
  inline bool has_right() const;
  inline void clear_right();
  static const int kRightFieldNumber = 3;
  inline double right() const;
  inline void set_right(double value);

  // optional double E0 = 4;
  inline bool has_e0() const;
  inline void clear_e0();
  static const int kE0FieldNumber = 4;
  inline double e0() const;
  inline void set_e0(double value);

  // @@protoc_insertion_point(class_scope:pb.E5StateGeneratorConfig)
 private:
  inline void set_has_a0();
  inline void clear_has_a0();
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_e0();
  inline void clear_has_e0();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double a0_;
  double left_;
  double right_;
  double e0_;
  friend void  protobuf_AddDesc_model_5fe5_2eproto();
  friend void protobuf_AssignDesc_model_5fe5_2eproto();
  friend void protobuf_ShutdownFile_model_5fe5_2eproto();

  void InitAsDefaultInstance();
  static E5StateGeneratorConfig* default_instance_;
};
// -------------------------------------------------------------------

class E5Model : public ::google::protobuf::Message {
 public:
  E5Model();
  virtual ~E5Model();

  E5Model(const E5Model& from);

  inline E5Model& operator=(const E5Model& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E5Model& default_instance();

  void Swap(E5Model* other);

  // implements Message ----------------------------------------------

  E5Model* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E5Model& from);
  void MergeFrom(const E5Model& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.E5Config pconfig = 1;
  inline bool has_pconfig() const;
  inline void clear_pconfig();
  static const int kPconfigFieldNumber = 1;
  inline const ::pb::E5Config& pconfig() const;
  inline ::pb::E5Config* mutable_pconfig();
  inline ::pb::E5Config* release_pconfig();
  inline void set_allocated_pconfig(::pb::E5Config* pconfig);

  // required .pb.E5State state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::pb::E5State& state() const;
  inline ::pb::E5State* mutable_state();
  inline ::pb::E5State* release_state();
  inline void set_allocated_state(::pb::E5State* state);

  // required .pb.EXPetscSolverConfig sconfig = 3;
  inline bool has_sconfig() const;
  inline void clear_sconfig();
  static const int kSconfigFieldNumber = 3;
  inline const ::pb::EXPetscSolverConfig& sconfig() const;
  inline ::pb::EXPetscSolverConfig* mutable_sconfig();
  inline ::pb::EXPetscSolverConfig* release_sconfig();
  inline void set_allocated_sconfig(::pb::EXPetscSolverConfig* sconfig);

  // @@protoc_insertion_point(class_scope:pb.E5Model)
 private:
  inline void set_has_pconfig();
  inline void clear_has_pconfig();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_sconfig();
  inline void clear_has_sconfig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::E5Config* pconfig_;
  ::pb::E5State* state_;
  ::pb::EXPetscSolverConfig* sconfig_;
  friend void  protobuf_AddDesc_model_5fe5_2eproto();
  friend void protobuf_AssignDesc_model_5fe5_2eproto();
  friend void protobuf_ShutdownFile_model_5fe5_2eproto();

  void InitAsDefaultInstance();
  static E5Model* default_instance_;
};
// -------------------------------------------------------------------

class E5Solution : public ::google::protobuf::Message {
 public:
  E5Solution();
  virtual ~E5Solution();

  E5Solution(const E5Solution& from);

  inline E5Solution& operator=(const E5Solution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const E5Solution& default_instance();

  void Swap(E5Solution* other);

  // implements Message ----------------------------------------------

  E5Solution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const E5Solution& from);
  void MergeFrom(const E5Solution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.E5State state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline const ::pb::E5State& state() const;
  inline ::pb::E5State* mutable_state();
  inline ::pb::E5State* release_state();
  inline void set_allocated_state(::pb::E5State* state);

  // optional .pb.E5State d_state = 2;
  inline bool has_d_state() const;
  inline void clear_d_state();
  static const int kDStateFieldNumber = 2;
  inline const ::pb::E5State& d_state() const;
  inline ::pb::E5State* mutable_d_state();
  inline ::pb::E5State* release_d_state();
  inline void set_allocated_d_state(::pb::E5State* d_state);

  // @@protoc_insertion_point(class_scope:pb.E5Solution)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_d_state();
  inline void clear_has_d_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pb::E5State* state_;
  ::pb::E5State* d_state_;
  friend void  protobuf_AddDesc_model_5fe5_2eproto();
  friend void protobuf_AssignDesc_model_5fe5_2eproto();
  friend void protobuf_ShutdownFile_model_5fe5_2eproto();

  void InitAsDefaultInstance();
  static E5Solution* default_instance_;
};
// ===================================================================


// ===================================================================

// E5Config

// required uint32 N = 1;
inline bool E5Config::has_n() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E5Config::set_has_n() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E5Config::clear_has_n() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E5Config::clear_n() {
  n_ = 0u;
  clear_has_n();
}
inline ::google::protobuf::uint32 E5Config::n() const {
  // @@protoc_insertion_point(field_get:pb.E5Config.N)
  return n_;
}
inline void E5Config::set_n(::google::protobuf::uint32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:pb.E5Config.N)
}

// optional double E0 = 2;
inline bool E5Config::has_e0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E5Config::set_has_e0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E5Config::clear_has_e0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E5Config::clear_e0() {
  e0_ = 0;
  clear_has_e0();
}
inline double E5Config::e0() const {
  // @@protoc_insertion_point(field_get:pb.E5Config.E0)
  return e0_;
}
inline void E5Config::set_e0(double value) {
  set_has_e0();
  e0_ = value;
  // @@protoc_insertion_point(field_set:pb.E5Config.E0)
}

// -------------------------------------------------------------------

// E5State_Particles

// required double x = 2;
inline bool E5State_Particles::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E5State_Particles::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E5State_Particles::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E5State_Particles::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double E5State_Particles::x() const {
  // @@protoc_insertion_point(field_get:pb.E5State.Particles.x)
  return x_;
}
inline void E5State_Particles::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.E5State.Particles.x)
}

// required double y = 3;
inline bool E5State_Particles::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E5State_Particles::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E5State_Particles::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E5State_Particles::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double E5State_Particles::y() const {
  // @@protoc_insertion_point(field_get:pb.E5State.Particles.y)
  return y_;
}
inline void E5State_Particles::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:pb.E5State.Particles.y)
}

// required double z = 4;
inline bool E5State_Particles::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E5State_Particles::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E5State_Particles::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E5State_Particles::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline double E5State_Particles::z() const {
  // @@protoc_insertion_point(field_get:pb.E5State.Particles.z)
  return z_;
}
inline void E5State_Particles::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:pb.E5State.Particles.z)
}

// -------------------------------------------------------------------

// E5State_Fields

// required double x = 6;
inline bool E5State_Fields::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E5State_Fields::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E5State_Fields::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E5State_Fields::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double E5State_Fields::x() const {
  // @@protoc_insertion_point(field_get:pb.E5State.Fields.x)
  return x_;
}
inline void E5State_Fields::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.E5State.Fields.x)
}

// required double y = 7;
inline bool E5State_Fields::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E5State_Fields::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E5State_Fields::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E5State_Fields::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double E5State_Fields::y() const {
  // @@protoc_insertion_point(field_get:pb.E5State.Fields.y)
  return y_;
}
inline void E5State_Fields::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:pb.E5State.Fields.y)
}

// -------------------------------------------------------------------

// E5State

// repeated group Particles = 1 {
inline int E5State::particles_size() const {
  return particles_.size();
}
inline void E5State::clear_particles() {
  particles_.Clear();
}
inline const ::pb::E5State_Particles& E5State::particles(int index) const {
  // @@protoc_insertion_point(field_get:pb.E5State.particles)
  return particles_.Get(index);
}
inline ::pb::E5State_Particles* E5State::mutable_particles(int index) {
  // @@protoc_insertion_point(field_mutable:pb.E5State.particles)
  return particles_.Mutable(index);
}
inline ::pb::E5State_Particles* E5State::add_particles() {
  // @@protoc_insertion_point(field_add:pb.E5State.particles)
  return particles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::E5State_Particles >&
E5State::particles() const {
  // @@protoc_insertion_point(field_list:pb.E5State.particles)
  return particles_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::E5State_Particles >*
E5State::mutable_particles() {
  // @@protoc_insertion_point(field_mutable_list:pb.E5State.particles)
  return &particles_;
}

// repeated group Fields = 5 {
inline int E5State::fields_size() const {
  return fields_.size();
}
inline void E5State::clear_fields() {
  fields_.Clear();
}
inline const ::pb::E5State_Fields& E5State::fields(int index) const {
  // @@protoc_insertion_point(field_get:pb.E5State.fields)
  return fields_.Get(index);
}
inline ::pb::E5State_Fields* E5State::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:pb.E5State.fields)
  return fields_.Mutable(index);
}
inline ::pb::E5State_Fields* E5State::add_fields() {
  // @@protoc_insertion_point(field_add:pb.E5State.fields)
  return fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::E5State_Fields >&
E5State::fields() const {
  // @@protoc_insertion_point(field_list:pb.E5State.fields)
  return fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::E5State_Fields >*
E5State::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:pb.E5State.fields)
  return &fields_;
}

// optional double A0 = 8;
inline bool E5State::has_a0() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E5State::set_has_a0() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E5State::clear_has_a0() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E5State::clear_a0() {
  a0_ = 0;
  clear_has_a0();
}
inline double E5State::a0() const {
  // @@protoc_insertion_point(field_get:pb.E5State.A0)
  return a0_;
}
inline void E5State::set_a0(double value) {
  set_has_a0();
  a0_ = value;
  // @@protoc_insertion_point(field_set:pb.E5State.A0)
}

// -------------------------------------------------------------------

// E5StateGeneratorConfig

// required double A0 = 1;
inline bool E5StateGeneratorConfig::has_a0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E5StateGeneratorConfig::set_has_a0() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E5StateGeneratorConfig::clear_has_a0() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E5StateGeneratorConfig::clear_a0() {
  a0_ = 0;
  clear_has_a0();
}
inline double E5StateGeneratorConfig::a0() const {
  // @@protoc_insertion_point(field_get:pb.E5StateGeneratorConfig.A0)
  return a0_;
}
inline void E5StateGeneratorConfig::set_a0(double value) {
  set_has_a0();
  a0_ = value;
  // @@protoc_insertion_point(field_set:pb.E5StateGeneratorConfig.A0)
}

// required double left = 2;
inline bool E5StateGeneratorConfig::has_left() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E5StateGeneratorConfig::set_has_left() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E5StateGeneratorConfig::clear_has_left() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E5StateGeneratorConfig::clear_left() {
  left_ = 0;
  clear_has_left();
}
inline double E5StateGeneratorConfig::left() const {
  // @@protoc_insertion_point(field_get:pb.E5StateGeneratorConfig.left)
  return left_;
}
inline void E5StateGeneratorConfig::set_left(double value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:pb.E5StateGeneratorConfig.left)
}

// required double right = 3;
inline bool E5StateGeneratorConfig::has_right() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E5StateGeneratorConfig::set_has_right() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E5StateGeneratorConfig::clear_has_right() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E5StateGeneratorConfig::clear_right() {
  right_ = 0;
  clear_has_right();
}
inline double E5StateGeneratorConfig::right() const {
  // @@protoc_insertion_point(field_get:pb.E5StateGeneratorConfig.right)
  return right_;
}
inline void E5StateGeneratorConfig::set_right(double value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:pb.E5StateGeneratorConfig.right)
}

// optional double E0 = 4;
inline bool E5StateGeneratorConfig::has_e0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void E5StateGeneratorConfig::set_has_e0() {
  _has_bits_[0] |= 0x00000008u;
}
inline void E5StateGeneratorConfig::clear_has_e0() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void E5StateGeneratorConfig::clear_e0() {
  e0_ = 0;
  clear_has_e0();
}
inline double E5StateGeneratorConfig::e0() const {
  // @@protoc_insertion_point(field_get:pb.E5StateGeneratorConfig.E0)
  return e0_;
}
inline void E5StateGeneratorConfig::set_e0(double value) {
  set_has_e0();
  e0_ = value;
  // @@protoc_insertion_point(field_set:pb.E5StateGeneratorConfig.E0)
}

// -------------------------------------------------------------------

// E5Model

// required .pb.E5Config pconfig = 1;
inline bool E5Model::has_pconfig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E5Model::set_has_pconfig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E5Model::clear_has_pconfig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E5Model::clear_pconfig() {
  if (pconfig_ != NULL) pconfig_->::pb::E5Config::Clear();
  clear_has_pconfig();
}
inline const ::pb::E5Config& E5Model::pconfig() const {
  // @@protoc_insertion_point(field_get:pb.E5Model.pconfig)
  return pconfig_ != NULL ? *pconfig_ : *default_instance_->pconfig_;
}
inline ::pb::E5Config* E5Model::mutable_pconfig() {
  set_has_pconfig();
  if (pconfig_ == NULL) pconfig_ = new ::pb::E5Config;
  // @@protoc_insertion_point(field_mutable:pb.E5Model.pconfig)
  return pconfig_;
}
inline ::pb::E5Config* E5Model::release_pconfig() {
  clear_has_pconfig();
  ::pb::E5Config* temp = pconfig_;
  pconfig_ = NULL;
  return temp;
}
inline void E5Model::set_allocated_pconfig(::pb::E5Config* pconfig) {
  delete pconfig_;
  pconfig_ = pconfig;
  if (pconfig) {
    set_has_pconfig();
  } else {
    clear_has_pconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E5Model.pconfig)
}

// required .pb.E5State state = 2;
inline bool E5Model::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E5Model::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E5Model::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E5Model::clear_state() {
  if (state_ != NULL) state_->::pb::E5State::Clear();
  clear_has_state();
}
inline const ::pb::E5State& E5Model::state() const {
  // @@protoc_insertion_point(field_get:pb.E5Model.state)
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::pb::E5State* E5Model::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::pb::E5State;
  // @@protoc_insertion_point(field_mutable:pb.E5Model.state)
  return state_;
}
inline ::pb::E5State* E5Model::release_state() {
  clear_has_state();
  ::pb::E5State* temp = state_;
  state_ = NULL;
  return temp;
}
inline void E5Model::set_allocated_state(::pb::E5State* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E5Model.state)
}

// required .pb.EXPetscSolverConfig sconfig = 3;
inline bool E5Model::has_sconfig() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void E5Model::set_has_sconfig() {
  _has_bits_[0] |= 0x00000004u;
}
inline void E5Model::clear_has_sconfig() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void E5Model::clear_sconfig() {
  if (sconfig_ != NULL) sconfig_->::pb::EXPetscSolverConfig::Clear();
  clear_has_sconfig();
}
inline const ::pb::EXPetscSolverConfig& E5Model::sconfig() const {
  // @@protoc_insertion_point(field_get:pb.E5Model.sconfig)
  return sconfig_ != NULL ? *sconfig_ : *default_instance_->sconfig_;
}
inline ::pb::EXPetscSolverConfig* E5Model::mutable_sconfig() {
  set_has_sconfig();
  if (sconfig_ == NULL) sconfig_ = new ::pb::EXPetscSolverConfig;
  // @@protoc_insertion_point(field_mutable:pb.E5Model.sconfig)
  return sconfig_;
}
inline ::pb::EXPetscSolverConfig* E5Model::release_sconfig() {
  clear_has_sconfig();
  ::pb::EXPetscSolverConfig* temp = sconfig_;
  sconfig_ = NULL;
  return temp;
}
inline void E5Model::set_allocated_sconfig(::pb::EXPetscSolverConfig* sconfig) {
  delete sconfig_;
  sconfig_ = sconfig;
  if (sconfig) {
    set_has_sconfig();
  } else {
    clear_has_sconfig();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E5Model.sconfig)
}

// -------------------------------------------------------------------

// E5Solution

// required .pb.E5State state = 1;
inline bool E5Solution::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void E5Solution::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void E5Solution::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void E5Solution::clear_state() {
  if (state_ != NULL) state_->::pb::E5State::Clear();
  clear_has_state();
}
inline const ::pb::E5State& E5Solution::state() const {
  // @@protoc_insertion_point(field_get:pb.E5Solution.state)
  return state_ != NULL ? *state_ : *default_instance_->state_;
}
inline ::pb::E5State* E5Solution::mutable_state() {
  set_has_state();
  if (state_ == NULL) state_ = new ::pb::E5State;
  // @@protoc_insertion_point(field_mutable:pb.E5Solution.state)
  return state_;
}
inline ::pb::E5State* E5Solution::release_state() {
  clear_has_state();
  ::pb::E5State* temp = state_;
  state_ = NULL;
  return temp;
}
inline void E5Solution::set_allocated_state(::pb::E5State* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E5Solution.state)
}

// optional .pb.E5State d_state = 2;
inline bool E5Solution::has_d_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void E5Solution::set_has_d_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void E5Solution::clear_has_d_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void E5Solution::clear_d_state() {
  if (d_state_ != NULL) d_state_->::pb::E5State::Clear();
  clear_has_d_state();
}
inline const ::pb::E5State& E5Solution::d_state() const {
  // @@protoc_insertion_point(field_get:pb.E5Solution.d_state)
  return d_state_ != NULL ? *d_state_ : *default_instance_->d_state_;
}
inline ::pb::E5State* E5Solution::mutable_d_state() {
  set_has_d_state();
  if (d_state_ == NULL) d_state_ = new ::pb::E5State;
  // @@protoc_insertion_point(field_mutable:pb.E5Solution.d_state)
  return d_state_;
}
inline ::pb::E5State* E5Solution::release_d_state() {
  clear_has_d_state();
  ::pb::E5State* temp = d_state_;
  d_state_ = NULL;
  return temp;
}
inline void E5Solution::set_allocated_d_state(::pb::E5State* d_state) {
  delete d_state_;
  d_state_ = d_state;
  if (d_state) {
    set_has_d_state();
  } else {
    clear_has_d_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.E5Solution.d_state)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_5fe5_2eproto__INCLUDED
