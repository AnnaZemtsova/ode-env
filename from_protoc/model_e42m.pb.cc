// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_e42m.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model_e42m.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* E42mConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* E42mState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mState_reflection_ = NULL;
const ::google::protobuf::Descriptor* E42mState_Particles_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mState_Particles_reflection_ = NULL;
const ::google::protobuf::Descriptor* E42mStateGeneratorConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mStateGeneratorConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* E42mModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mModel_reflection_ = NULL;
const ::google::protobuf::Descriptor* E42mSolution_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mSolution_reflection_ = NULL;
const ::google::protobuf::Descriptor* E42mSpecial_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mSpecial_reflection_ = NULL;
const ::google::protobuf::Descriptor* E42mSpecial_Hist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  E42mSpecial_Hist_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_model_5fe42m_2eproto() {
  protobuf_AddDesc_model_5fe42m_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "model_e42m.proto");
  GOOGLE_CHECK(file != NULL);
  E42mConfig_descriptor_ = file->message_type(0);
  static const int E42mConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mConfig, n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mConfig, delta_0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mConfig, alpha_),
  };
  E42mConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mConfig_descriptor_,
      E42mConfig::default_instance_,
      E42mConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mConfig));
  E42mState_descriptor_ = file->message_type(1);
  static const int E42mState_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState, e_p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState, phi_p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState, particles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState, e_m_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState, phi_m_),
  };
  E42mState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mState_descriptor_,
      E42mState::default_instance_,
      E42mState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mState));
  E42mState_Particles_descriptor_ = E42mState_descriptor_->nested_type(0);
  static const int E42mState_Particles_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState_Particles, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState_Particles, psi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState_Particles, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState_Particles, delta_),
  };
  E42mState_Particles_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mState_Particles_descriptor_,
      E42mState_Particles::default_instance_,
      E42mState_Particles_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState_Particles, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mState_Particles, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mState_Particles));
  E42mStateGeneratorConfig_descriptor_ = file->message_type(2);
  static const int E42mStateGeneratorConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mStateGeneratorConfig, e_p0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mStateGeneratorConfig, phi_p0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mStateGeneratorConfig, a0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mStateGeneratorConfig, e_m0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mStateGeneratorConfig, phi_m0_),
  };
  E42mStateGeneratorConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mStateGeneratorConfig_descriptor_,
      E42mStateGeneratorConfig::default_instance_,
      E42mStateGeneratorConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mStateGeneratorConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mStateGeneratorConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mStateGeneratorConfig));
  E42mModel_descriptor_ = file->message_type(3);
  static const int E42mModel_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mModel, pconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mModel, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mModel, sconfig_),
  };
  E42mModel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mModel_descriptor_,
      E42mModel::default_instance_,
      E42mModel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mModel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mModel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mModel));
  E42mSolution_descriptor_ = file->message_type(4);
  static const int E42mSolution_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSolution, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSolution, d_state_),
  };
  E42mSolution_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mSolution_descriptor_,
      E42mSolution::default_instance_,
      E42mSolution_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSolution, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSolution, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mSolution));
  E42mSpecial_descriptor_ = file->message_type(5);
  static const int E42mSpecial_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, e_p_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, e_m_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, aver_a_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, int_e_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, na_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, nb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, m_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, ia_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, ib_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, ia_aver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, ib_aver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, wa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, wb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, hist_),
  };
  E42mSpecial_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mSpecial_descriptor_,
      E42mSpecial::default_instance_,
      E42mSpecial_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mSpecial));
  E42mSpecial_Hist_descriptor_ = E42mSpecial_descriptor_->nested_type(0);
  static const int E42mSpecial_Hist_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial_Hist, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial_Hist, y_),
  };
  E42mSpecial_Hist_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      E42mSpecial_Hist_descriptor_,
      E42mSpecial_Hist::default_instance_,
      E42mSpecial_Hist_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial_Hist, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(E42mSpecial_Hist, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(E42mSpecial_Hist));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_model_5fe42m_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mConfig_descriptor_, &E42mConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mState_descriptor_, &E42mState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mState_Particles_descriptor_, &E42mState_Particles::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mStateGeneratorConfig_descriptor_, &E42mStateGeneratorConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mModel_descriptor_, &E42mModel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mSolution_descriptor_, &E42mSolution::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mSpecial_descriptor_, &E42mSpecial::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    E42mSpecial_Hist_descriptor_, &E42mSpecial_Hist::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_model_5fe42m_2eproto() {
  delete E42mConfig::default_instance_;
  delete E42mConfig_reflection_;
  delete E42mState::default_instance_;
  delete E42mState_reflection_;
  delete E42mState_Particles::default_instance_;
  delete E42mState_Particles_reflection_;
  delete E42mStateGeneratorConfig::default_instance_;
  delete E42mStateGeneratorConfig_reflection_;
  delete E42mModel::default_instance_;
  delete E42mModel_reflection_;
  delete E42mSolution::default_instance_;
  delete E42mSolution_reflection_;
  delete E42mSpecial::default_instance_;
  delete E42mSpecial_reflection_;
  delete E42mSpecial_Hist::default_instance_;
  delete E42mSpecial_Hist_reflection_;
}

void protobuf_AddDesc_model_5fe42m_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pb::protobuf_AddDesc_common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020model_e42m.proto\022\002pb\032\014common.proto\"7\n\n"
    "E42mConfig\022\t\n\001N\030\001 \002(\r\022\017\n\007delta_0\030\002 \001(\001\022\r"
    "\n\005alpha\030\003 \001(\001\"\256\001\n\tE42mState\022\013\n\003E_p\030\001 \002(\001"
    "\022\r\n\005phi_p\030\002 \002(\001\022*\n\tparticles\030\003 \003(\n2\027.pb."
    "E42mState.Particles\022\013\n\003E_m\030\010 \002(\001\022\r\n\005phi_"
    "m\030\t \002(\001\032=\n\tParticles\022\t\n\001a\030\004 \002(\001\022\013\n\003psi\030\005"
    " \002(\001\022\t\n\001z\030\006 \002(\001\022\r\n\005delta\030\007 \002(\001\"b\n\030E42mSt"
    "ateGeneratorConfig\022\014\n\004E_p0\030\001 \002(\001\022\016\n\006phi_"
    "p0\030\002 \002(\001\022\n\n\002A0\030\003 \002(\001\022\014\n\004E_m0\030\004 \002(\001\022\016\n\006ph"
    "i_m0\030\005 \002(\001\"t\n\tE42mModel\022\037\n\007pconfig\030\001 \002(\013"
    "2\016.pb.E42mConfig\022\034\n\005state\030\002 \002(\0132\r.pb.E42"
    "mState\022(\n\007sconfig\030\003 \002(\0132\027.pb.EXPetscSolv"
    "erConfig\"L\n\014E42mSolution\022\034\n\005state\030\001 \002(\0132"
    "\r.pb.E42mState\022\036\n\007d_state\030\002 \001(\0132\r.pb.E42"
    "mState\"\220\002\n\013E42mSpecial\022\r\n\005e_p_2\030\001 \001(\001\022\r\n"
    "\005e_m_2\030\020 \001(\001\022\020\n\010aver_a_2\030\002 \001(\001\022\017\n\007int_e_"
    "a\030\004 \001(\001\022\n\n\002Na\030\005 \001(\001\022\n\n\002Nb\030\006 \001(\001\022\t\n\001M\030\021 \001"
    "(\001\022\t\n\001N\030\022 \001(\001\022\n\n\002Ia\030\007 \001(\001\022\n\n\002Ib\030\010 \001(\001\022\017\n"
    "\007Ia_aver\030\t \001(\001\022\017\n\007Ib_aver\030\n \001(\001\022\n\n\002Wa\030\013 "
    "\001(\001\022\n\n\002Wb\030\014 \001(\001\022\"\n\004hist\030\r \003(\n2\024.pb.E42mS"
    "pecial.Hist\032\034\n\004Hist\022\t\n\001x\030\016 \002(\001\022\t\n\001y\030\017 \002("
    "\001", 841);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model_e42m.proto", &protobuf_RegisterTypes);
  E42mConfig::default_instance_ = new E42mConfig();
  E42mState::default_instance_ = new E42mState();
  E42mState_Particles::default_instance_ = new E42mState_Particles();
  E42mStateGeneratorConfig::default_instance_ = new E42mStateGeneratorConfig();
  E42mModel::default_instance_ = new E42mModel();
  E42mSolution::default_instance_ = new E42mSolution();
  E42mSpecial::default_instance_ = new E42mSpecial();
  E42mSpecial_Hist::default_instance_ = new E42mSpecial_Hist();
  E42mConfig::default_instance_->InitAsDefaultInstance();
  E42mState::default_instance_->InitAsDefaultInstance();
  E42mState_Particles::default_instance_->InitAsDefaultInstance();
  E42mStateGeneratorConfig::default_instance_->InitAsDefaultInstance();
  E42mModel::default_instance_->InitAsDefaultInstance();
  E42mSolution::default_instance_->InitAsDefaultInstance();
  E42mSpecial::default_instance_->InitAsDefaultInstance();
  E42mSpecial_Hist::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_model_5fe42m_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_model_5fe42m_2eproto {
  StaticDescriptorInitializer_model_5fe42m_2eproto() {
    protobuf_AddDesc_model_5fe42m_2eproto();
  }
} static_descriptor_initializer_model_5fe42m_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int E42mConfig::kNFieldNumber;
const int E42mConfig::kDelta0FieldNumber;
const int E42mConfig::kAlphaFieldNumber;
#endif  // !_MSC_VER

E42mConfig::E42mConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mConfig)
}

void E42mConfig::InitAsDefaultInstance() {
}

E42mConfig::E42mConfig(const E42mConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mConfig)
}

void E42mConfig::SharedCtor() {
  _cached_size_ = 0;
  n_ = 0u;
  delta_0_ = 0;
  alpha_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mConfig::~E42mConfig() {
  // @@protoc_insertion_point(destructor:pb.E42mConfig)
  SharedDtor();
}

void E42mConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E42mConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mConfig_descriptor_;
}

const E42mConfig& E42mConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mConfig* E42mConfig::default_instance_ = NULL;

E42mConfig* E42mConfig::New() const {
  return new E42mConfig;
}

void E42mConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E42mConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(delta_0_, n_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 N = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &n_)));
          set_has_n();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_delta_0;
        break;
      }

      // optional double delta_0 = 2;
      case 2: {
        if (tag == 17) {
         parse_delta_0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delta_0_)));
          set_has_delta_0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_alpha;
        break;
      }

      // optional double alpha = 3;
      case 3: {
        if (tag == 25) {
         parse_alpha:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alpha_)));
          set_has_alpha();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mConfig)
  return false;
#undef DO_
}

void E42mConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mConfig)
  // required uint32 N = 1;
  if (has_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->n(), output);
  }

  // optional double delta_0 = 2;
  if (has_delta_0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->delta_0(), output);
  }

  // optional double alpha = 3;
  if (has_alpha()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->alpha(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mConfig)
}

::google::protobuf::uint8* E42mConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mConfig)
  // required uint32 N = 1;
  if (has_n()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->n(), target);
  }

  // optional double delta_0 = 2;
  if (has_delta_0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->delta_0(), target);
  }

  // optional double alpha = 3;
  if (has_alpha()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->alpha(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mConfig)
  return target;
}

int E42mConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 N = 1;
    if (has_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->n());
    }

    // optional double delta_0 = 2;
    if (has_delta_0()) {
      total_size += 1 + 8;
    }

    // optional double alpha = 3;
    if (has_alpha()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mConfig::MergeFrom(const E42mConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_n()) {
      set_n(from.n());
    }
    if (from.has_delta_0()) {
      set_delta_0(from.delta_0());
    }
    if (from.has_alpha()) {
      set_alpha(from.alpha());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mConfig::CopyFrom(const E42mConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void E42mConfig::Swap(E42mConfig* other) {
  if (other != this) {
    std::swap(n_, other->n_);
    std::swap(delta_0_, other->delta_0_);
    std::swap(alpha_, other->alpha_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mConfig_descriptor_;
  metadata.reflection = E42mConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E42mState_Particles::kAFieldNumber;
const int E42mState_Particles::kPsiFieldNumber;
const int E42mState_Particles::kZFieldNumber;
const int E42mState_Particles::kDeltaFieldNumber;
#endif  // !_MSC_VER

E42mState_Particles::E42mState_Particles()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mState.Particles)
}

void E42mState_Particles::InitAsDefaultInstance() {
}

E42mState_Particles::E42mState_Particles(const E42mState_Particles& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mState.Particles)
}

void E42mState_Particles::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  psi_ = 0;
  z_ = 0;
  delta_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mState_Particles::~E42mState_Particles() {
  // @@protoc_insertion_point(destructor:pb.E42mState.Particles)
  SharedDtor();
}

void E42mState_Particles::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E42mState_Particles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mState_Particles::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mState_Particles_descriptor_;
}

const E42mState_Particles& E42mState_Particles::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mState_Particles* E42mState_Particles::default_instance_ = NULL;

E42mState_Particles* E42mState_Particles::New() const {
  return new E42mState_Particles;
}

void E42mState_Particles::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E42mState_Particles*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(a_, delta_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mState_Particles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mState.Particles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double a = 4;
      case 4: {
        if (tag == 33) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_psi;
        break;
      }

      // required double psi = 5;
      case 5: {
        if (tag == 41) {
         parse_psi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &psi_)));
          set_has_psi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_z;
        break;
      }

      // required double z = 6;
      case 6: {
        if (tag == 49) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_delta;
        break;
      }

      // required double delta = 7;
      case 7: {
        if (tag == 57) {
         parse_delta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delta_)));
          set_has_delta();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mState.Particles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mState.Particles)
  return false;
#undef DO_
}

void E42mState_Particles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mState.Particles)
  // required double a = 4;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->a(), output);
  }

  // required double psi = 5;
  if (has_psi()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->psi(), output);
  }

  // required double z = 6;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->z(), output);
  }

  // required double delta = 7;
  if (has_delta()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->delta(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mState.Particles)
}

::google::protobuf::uint8* E42mState_Particles::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mState.Particles)
  // required double a = 4;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->a(), target);
  }

  // required double psi = 5;
  if (has_psi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->psi(), target);
  }

  // required double z = 6;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->z(), target);
  }

  // required double delta = 7;
  if (has_delta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->delta(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mState.Particles)
  return target;
}

int E42mState_Particles::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double a = 4;
    if (has_a()) {
      total_size += 1 + 8;
    }

    // required double psi = 5;
    if (has_psi()) {
      total_size += 1 + 8;
    }

    // required double z = 6;
    if (has_z()) {
      total_size += 1 + 8;
    }

    // required double delta = 7;
    if (has_delta()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mState_Particles::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mState_Particles* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mState_Particles*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mState_Particles::MergeFrom(const E42mState_Particles& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_psi()) {
      set_psi(from.psi());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_delta()) {
      set_delta(from.delta());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mState_Particles::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mState_Particles::CopyFrom(const E42mState_Particles& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mState_Particles::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void E42mState_Particles::Swap(E42mState_Particles* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(psi_, other->psi_);
    std::swap(z_, other->z_);
    std::swap(delta_, other->delta_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mState_Particles::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mState_Particles_descriptor_;
  metadata.reflection = E42mState_Particles_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int E42mState::kEPFieldNumber;
const int E42mState::kPhiPFieldNumber;
const int E42mState::kParticlesFieldNumber;
const int E42mState::kEMFieldNumber;
const int E42mState::kPhiMFieldNumber;
#endif  // !_MSC_VER

E42mState::E42mState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mState)
}

void E42mState::InitAsDefaultInstance() {
}

E42mState::E42mState(const E42mState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mState)
}

void E42mState::SharedCtor() {
  _cached_size_ = 0;
  e_p_ = 0;
  phi_p_ = 0;
  e_m_ = 0;
  phi_m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mState::~E42mState() {
  // @@protoc_insertion_point(destructor:pb.E42mState)
  SharedDtor();
}

void E42mState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E42mState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mState_descriptor_;
}

const E42mState& E42mState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mState* E42mState::default_instance_ = NULL;

E42mState* E42mState::New() const {
  return new E42mState;
}

void E42mState::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E42mState*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(e_p_, phi_p_);
  ZR_(e_m_, phi_m_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  particles_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double E_p = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_p_)));
          set_has_e_p();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_phi_p;
        break;
      }

      // required double phi_p = 2;
      case 2: {
        if (tag == 17) {
         parse_phi_p:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phi_p_)));
          set_has_phi_p();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(27)) goto parse_particles;
        break;
      }

      // repeated group Particles = 3 {
      case 3: {
        if (tag == 27) {
         parse_particles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                3, input, add_particles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(27)) goto parse_particles;
        if (input->ExpectTag(65)) goto parse_E_m;
        break;
      }

      // required double E_m = 8;
      case 8: {
        if (tag == 65) {
         parse_E_m:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_m_)));
          set_has_e_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_phi_m;
        break;
      }

      // required double phi_m = 9;
      case 9: {
        if (tag == 73) {
         parse_phi_m:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phi_m_)));
          set_has_phi_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mState)
  return false;
#undef DO_
}

void E42mState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mState)
  // required double E_p = 1;
  if (has_e_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->e_p(), output);
  }

  // required double phi_p = 2;
  if (has_phi_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->phi_p(), output);
  }

  // repeated group Particles = 3 {
  for (int i = 0; i < this->particles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      3, this->particles(i), output);
  }

  // required double E_m = 8;
  if (has_e_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->e_m(), output);
  }

  // required double phi_m = 9;
  if (has_phi_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->phi_m(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mState)
}

::google::protobuf::uint8* E42mState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mState)
  // required double E_p = 1;
  if (has_e_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->e_p(), target);
  }

  // required double phi_p = 2;
  if (has_phi_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->phi_p(), target);
  }

  // repeated group Particles = 3 {
  for (int i = 0; i < this->particles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        3, this->particles(i), target);
  }

  // required double E_m = 8;
  if (has_e_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->e_m(), target);
  }

  // required double phi_m = 9;
  if (has_phi_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->phi_m(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mState)
  return target;
}

int E42mState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double E_p = 1;
    if (has_e_p()) {
      total_size += 1 + 8;
    }

    // required double phi_p = 2;
    if (has_phi_p()) {
      total_size += 1 + 8;
    }

    // required double E_m = 8;
    if (has_e_m()) {
      total_size += 1 + 8;
    }

    // required double phi_m = 9;
    if (has_phi_m()) {
      total_size += 1 + 8;
    }

  }
  // repeated group Particles = 3 {
  total_size += 2 * this->particles_size();
  for (int i = 0; i < this->particles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->particles(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mState::MergeFrom(const E42mState& from) {
  GOOGLE_CHECK_NE(&from, this);
  particles_.MergeFrom(from.particles_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_e_p()) {
      set_e_p(from.e_p());
    }
    if (from.has_phi_p()) {
      set_phi_p(from.phi_p());
    }
    if (from.has_e_m()) {
      set_e_m(from.e_m());
    }
    if (from.has_phi_m()) {
      set_phi_m(from.phi_m());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mState::CopyFrom(const E42mState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mState::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->particles())) return false;
  return true;
}

void E42mState::Swap(E42mState* other) {
  if (other != this) {
    std::swap(e_p_, other->e_p_);
    std::swap(phi_p_, other->phi_p_);
    particles_.Swap(&other->particles_);
    std::swap(e_m_, other->e_m_);
    std::swap(phi_m_, other->phi_m_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mState_descriptor_;
  metadata.reflection = E42mState_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E42mStateGeneratorConfig::kEP0FieldNumber;
const int E42mStateGeneratorConfig::kPhiP0FieldNumber;
const int E42mStateGeneratorConfig::kA0FieldNumber;
const int E42mStateGeneratorConfig::kEM0FieldNumber;
const int E42mStateGeneratorConfig::kPhiM0FieldNumber;
#endif  // !_MSC_VER

E42mStateGeneratorConfig::E42mStateGeneratorConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mStateGeneratorConfig)
}

void E42mStateGeneratorConfig::InitAsDefaultInstance() {
}

E42mStateGeneratorConfig::E42mStateGeneratorConfig(const E42mStateGeneratorConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mStateGeneratorConfig)
}

void E42mStateGeneratorConfig::SharedCtor() {
  _cached_size_ = 0;
  e_p0_ = 0;
  phi_p0_ = 0;
  a0_ = 0;
  e_m0_ = 0;
  phi_m0_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mStateGeneratorConfig::~E42mStateGeneratorConfig() {
  // @@protoc_insertion_point(destructor:pb.E42mStateGeneratorConfig)
  SharedDtor();
}

void E42mStateGeneratorConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E42mStateGeneratorConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mStateGeneratorConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mStateGeneratorConfig_descriptor_;
}

const E42mStateGeneratorConfig& E42mStateGeneratorConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mStateGeneratorConfig* E42mStateGeneratorConfig::default_instance_ = NULL;

E42mStateGeneratorConfig* E42mStateGeneratorConfig::New() const {
  return new E42mStateGeneratorConfig;
}

void E42mStateGeneratorConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E42mStateGeneratorConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(e_p0_, phi_m0_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mStateGeneratorConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mStateGeneratorConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double E_p0 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_p0_)));
          set_has_e_p0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_phi_p0;
        break;
      }

      // required double phi_p0 = 2;
      case 2: {
        if (tag == 17) {
         parse_phi_p0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phi_p0_)));
          set_has_phi_p0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_A0;
        break;
      }

      // required double A0 = 3;
      case 3: {
        if (tag == 25) {
         parse_A0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a0_)));
          set_has_a0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_E_m0;
        break;
      }

      // required double E_m0 = 4;
      case 4: {
        if (tag == 33) {
         parse_E_m0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_m0_)));
          set_has_e_m0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_phi_m0;
        break;
      }

      // required double phi_m0 = 5;
      case 5: {
        if (tag == 41) {
         parse_phi_m0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phi_m0_)));
          set_has_phi_m0();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mStateGeneratorConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mStateGeneratorConfig)
  return false;
#undef DO_
}

void E42mStateGeneratorConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mStateGeneratorConfig)
  // required double E_p0 = 1;
  if (has_e_p0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->e_p0(), output);
  }

  // required double phi_p0 = 2;
  if (has_phi_p0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->phi_p0(), output);
  }

  // required double A0 = 3;
  if (has_a0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->a0(), output);
  }

  // required double E_m0 = 4;
  if (has_e_m0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->e_m0(), output);
  }

  // required double phi_m0 = 5;
  if (has_phi_m0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->phi_m0(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mStateGeneratorConfig)
}

::google::protobuf::uint8* E42mStateGeneratorConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mStateGeneratorConfig)
  // required double E_p0 = 1;
  if (has_e_p0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->e_p0(), target);
  }

  // required double phi_p0 = 2;
  if (has_phi_p0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->phi_p0(), target);
  }

  // required double A0 = 3;
  if (has_a0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->a0(), target);
  }

  // required double E_m0 = 4;
  if (has_e_m0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->e_m0(), target);
  }

  // required double phi_m0 = 5;
  if (has_phi_m0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->phi_m0(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mStateGeneratorConfig)
  return target;
}

int E42mStateGeneratorConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double E_p0 = 1;
    if (has_e_p0()) {
      total_size += 1 + 8;
    }

    // required double phi_p0 = 2;
    if (has_phi_p0()) {
      total_size += 1 + 8;
    }

    // required double A0 = 3;
    if (has_a0()) {
      total_size += 1 + 8;
    }

    // required double E_m0 = 4;
    if (has_e_m0()) {
      total_size += 1 + 8;
    }

    // required double phi_m0 = 5;
    if (has_phi_m0()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mStateGeneratorConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mStateGeneratorConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mStateGeneratorConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mStateGeneratorConfig::MergeFrom(const E42mStateGeneratorConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_e_p0()) {
      set_e_p0(from.e_p0());
    }
    if (from.has_phi_p0()) {
      set_phi_p0(from.phi_p0());
    }
    if (from.has_a0()) {
      set_a0(from.a0());
    }
    if (from.has_e_m0()) {
      set_e_m0(from.e_m0());
    }
    if (from.has_phi_m0()) {
      set_phi_m0(from.phi_m0());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mStateGeneratorConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mStateGeneratorConfig::CopyFrom(const E42mStateGeneratorConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mStateGeneratorConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void E42mStateGeneratorConfig::Swap(E42mStateGeneratorConfig* other) {
  if (other != this) {
    std::swap(e_p0_, other->e_p0_);
    std::swap(phi_p0_, other->phi_p0_);
    std::swap(a0_, other->a0_);
    std::swap(e_m0_, other->e_m0_);
    std::swap(phi_m0_, other->phi_m0_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mStateGeneratorConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mStateGeneratorConfig_descriptor_;
  metadata.reflection = E42mStateGeneratorConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E42mModel::kPconfigFieldNumber;
const int E42mModel::kStateFieldNumber;
const int E42mModel::kSconfigFieldNumber;
#endif  // !_MSC_VER

E42mModel::E42mModel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mModel)
}

void E42mModel::InitAsDefaultInstance() {
  pconfig_ = const_cast< ::pb::E42mConfig*>(&::pb::E42mConfig::default_instance());
  state_ = const_cast< ::pb::E42mState*>(&::pb::E42mState::default_instance());
  sconfig_ = const_cast< ::pb::EXPetscSolverConfig*>(&::pb::EXPetscSolverConfig::default_instance());
}

E42mModel::E42mModel(const E42mModel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mModel)
}

void E42mModel::SharedCtor() {
  _cached_size_ = 0;
  pconfig_ = NULL;
  state_ = NULL;
  sconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mModel::~E42mModel() {
  // @@protoc_insertion_point(destructor:pb.E42mModel)
  SharedDtor();
}

void E42mModel::SharedDtor() {
  if (this != default_instance_) {
    delete pconfig_;
    delete state_;
    delete sconfig_;
  }
}

void E42mModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mModel_descriptor_;
}

const E42mModel& E42mModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mModel* E42mModel::default_instance_ = NULL;

E42mModel* E42mModel::New() const {
  return new E42mModel;
}

void E42mModel::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_pconfig()) {
      if (pconfig_ != NULL) pconfig_->::pb::E42mConfig::Clear();
    }
    if (has_state()) {
      if (state_ != NULL) state_->::pb::E42mState::Clear();
    }
    if (has_sconfig()) {
      if (sconfig_ != NULL) sconfig_->::pb::EXPetscSolverConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.E42mConfig pconfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_state;
        break;
      }

      // required .pb.E42mState state = 2;
      case 2: {
        if (tag == 18) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sconfig;
        break;
      }

      // required .pb.EXPetscSolverConfig sconfig = 3;
      case 3: {
        if (tag == 26) {
         parse_sconfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mModel)
  return false;
#undef DO_
}

void E42mModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mModel)
  // required .pb.E42mConfig pconfig = 1;
  if (has_pconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pconfig(), output);
  }

  // required .pb.E42mState state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->state(), output);
  }

  // required .pb.EXPetscSolverConfig sconfig = 3;
  if (has_sconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->sconfig(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mModel)
}

::google::protobuf::uint8* E42mModel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mModel)
  // required .pb.E42mConfig pconfig = 1;
  if (has_pconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pconfig(), target);
  }

  // required .pb.E42mState state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->state(), target);
  }

  // required .pb.EXPetscSolverConfig sconfig = 3;
  if (has_sconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->sconfig(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mModel)
  return target;
}

int E42mModel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pb.E42mConfig pconfig = 1;
    if (has_pconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pconfig());
    }

    // required .pb.E42mState state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->state());
    }

    // required .pb.EXPetscSolverConfig sconfig = 3;
    if (has_sconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sconfig());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mModel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mModel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mModel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mModel::MergeFrom(const E42mModel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pconfig()) {
      mutable_pconfig()->::pb::E42mConfig::MergeFrom(from.pconfig());
    }
    if (from.has_state()) {
      mutable_state()->::pb::E42mState::MergeFrom(from.state());
    }
    if (from.has_sconfig()) {
      mutable_sconfig()->::pb::EXPetscSolverConfig::MergeFrom(from.sconfig());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mModel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mModel::CopyFrom(const E42mModel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mModel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_pconfig()) {
    if (!this->pconfig().IsInitialized()) return false;
  }
  if (has_state()) {
    if (!this->state().IsInitialized()) return false;
  }
  return true;
}

void E42mModel::Swap(E42mModel* other) {
  if (other != this) {
    std::swap(pconfig_, other->pconfig_);
    std::swap(state_, other->state_);
    std::swap(sconfig_, other->sconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mModel_descriptor_;
  metadata.reflection = E42mModel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E42mSolution::kStateFieldNumber;
const int E42mSolution::kDStateFieldNumber;
#endif  // !_MSC_VER

E42mSolution::E42mSolution()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mSolution)
}

void E42mSolution::InitAsDefaultInstance() {
  state_ = const_cast< ::pb::E42mState*>(&::pb::E42mState::default_instance());
  d_state_ = const_cast< ::pb::E42mState*>(&::pb::E42mState::default_instance());
}

E42mSolution::E42mSolution(const E42mSolution& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mSolution)
}

void E42mSolution::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
  d_state_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mSolution::~E42mSolution() {
  // @@protoc_insertion_point(destructor:pb.E42mSolution)
  SharedDtor();
}

void E42mSolution::SharedDtor() {
  if (this != default_instance_) {
    delete state_;
    delete d_state_;
  }
}

void E42mSolution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mSolution::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mSolution_descriptor_;
}

const E42mSolution& E42mSolution::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mSolution* E42mSolution::default_instance_ = NULL;

E42mSolution* E42mSolution::New() const {
  return new E42mSolution;
}

void E42mSolution::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_state()) {
      if (state_ != NULL) state_->::pb::E42mState::Clear();
    }
    if (has_d_state()) {
      if (d_state_ != NULL) d_state_->::pb::E42mState::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mSolution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mSolution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.E42mState state = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_d_state;
        break;
      }

      // optional .pb.E42mState d_state = 2;
      case 2: {
        if (tag == 18) {
         parse_d_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_d_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mSolution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mSolution)
  return false;
#undef DO_
}

void E42mSolution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mSolution)
  // required .pb.E42mState state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->state(), output);
  }

  // optional .pb.E42mState d_state = 2;
  if (has_d_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->d_state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mSolution)
}

::google::protobuf::uint8* E42mSolution::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mSolution)
  // required .pb.E42mState state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->state(), target);
  }

  // optional .pb.E42mState d_state = 2;
  if (has_d_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->d_state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mSolution)
  return target;
}

int E42mSolution::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .pb.E42mState state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->state());
    }

    // optional .pb.E42mState d_state = 2;
    if (has_d_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->d_state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mSolution::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mSolution* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mSolution*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mSolution::MergeFrom(const E42mSolution& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      mutable_state()->::pb::E42mState::MergeFrom(from.state());
    }
    if (from.has_d_state()) {
      mutable_d_state()->::pb::E42mState::MergeFrom(from.d_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mSolution::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mSolution::CopyFrom(const E42mSolution& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mSolution::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_state()) {
    if (!this->state().IsInitialized()) return false;
  }
  if (has_d_state()) {
    if (!this->d_state().IsInitialized()) return false;
  }
  return true;
}

void E42mSolution::Swap(E42mSolution* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(d_state_, other->d_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mSolution::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mSolution_descriptor_;
  metadata.reflection = E42mSolution_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int E42mSpecial_Hist::kXFieldNumber;
const int E42mSpecial_Hist::kYFieldNumber;
#endif  // !_MSC_VER

E42mSpecial_Hist::E42mSpecial_Hist()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mSpecial.Hist)
}

void E42mSpecial_Hist::InitAsDefaultInstance() {
}

E42mSpecial_Hist::E42mSpecial_Hist(const E42mSpecial_Hist& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mSpecial.Hist)
}

void E42mSpecial_Hist::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mSpecial_Hist::~E42mSpecial_Hist() {
  // @@protoc_insertion_point(destructor:pb.E42mSpecial.Hist)
  SharedDtor();
}

void E42mSpecial_Hist::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E42mSpecial_Hist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mSpecial_Hist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mSpecial_Hist_descriptor_;
}

const E42mSpecial_Hist& E42mSpecial_Hist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mSpecial_Hist* E42mSpecial_Hist::default_instance_ = NULL;

E42mSpecial_Hist* E42mSpecial_Hist::New() const {
  return new E42mSpecial_Hist;
}

void E42mSpecial_Hist::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E42mSpecial_Hist*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, y_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mSpecial_Hist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mSpecial.Hist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 14;
      case 14: {
        if (tag == 113) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_y;
        break;
      }

      // required double y = 15;
      case 15: {
        if (tag == 121) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mSpecial.Hist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mSpecial.Hist)
  return false;
#undef DO_
}

void E42mSpecial_Hist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mSpecial.Hist)
  // required double x = 14;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->x(), output);
  }

  // required double y = 15;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mSpecial.Hist)
}

::google::protobuf::uint8* E42mSpecial_Hist::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mSpecial.Hist)
  // required double x = 14;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->x(), target);
  }

  // required double y = 15;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mSpecial.Hist)
  return target;
}

int E42mSpecial_Hist::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 14;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 15;
    if (has_y()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mSpecial_Hist::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mSpecial_Hist* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mSpecial_Hist*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mSpecial_Hist::MergeFrom(const E42mSpecial_Hist& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mSpecial_Hist::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mSpecial_Hist::CopyFrom(const E42mSpecial_Hist& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mSpecial_Hist::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void E42mSpecial_Hist::Swap(E42mSpecial_Hist* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mSpecial_Hist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mSpecial_Hist_descriptor_;
  metadata.reflection = E42mSpecial_Hist_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int E42mSpecial::kEP2FieldNumber;
const int E42mSpecial::kEM2FieldNumber;
const int E42mSpecial::kAverA2FieldNumber;
const int E42mSpecial::kIntEAFieldNumber;
const int E42mSpecial::kNaFieldNumber;
const int E42mSpecial::kNbFieldNumber;
const int E42mSpecial::kMFieldNumber;
const int E42mSpecial::kNFieldNumber;
const int E42mSpecial::kIaFieldNumber;
const int E42mSpecial::kIbFieldNumber;
const int E42mSpecial::kIaAverFieldNumber;
const int E42mSpecial::kIbAverFieldNumber;
const int E42mSpecial::kWaFieldNumber;
const int E42mSpecial::kWbFieldNumber;
const int E42mSpecial::kHistFieldNumber;
#endif  // !_MSC_VER

E42mSpecial::E42mSpecial()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.E42mSpecial)
}

void E42mSpecial::InitAsDefaultInstance() {
}

E42mSpecial::E42mSpecial(const E42mSpecial& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.E42mSpecial)
}

void E42mSpecial::SharedCtor() {
  _cached_size_ = 0;
  e_p_2_ = 0;
  e_m_2_ = 0;
  aver_a_2_ = 0;
  int_e_a_ = 0;
  na_ = 0;
  nb_ = 0;
  m_ = 0;
  n_ = 0;
  ia_ = 0;
  ib_ = 0;
  ia_aver_ = 0;
  ib_aver_ = 0;
  wa_ = 0;
  wb_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

E42mSpecial::~E42mSpecial() {
  // @@protoc_insertion_point(destructor:pb.E42mSpecial)
  SharedDtor();
}

void E42mSpecial::SharedDtor() {
  if (this != default_instance_) {
  }
}

void E42mSpecial::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* E42mSpecial::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E42mSpecial_descriptor_;
}

const E42mSpecial& E42mSpecial::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fe42m_2eproto();
  return *default_instance_;
}

E42mSpecial* E42mSpecial::default_instance_ = NULL;

E42mSpecial* E42mSpecial::New() const {
  return new E42mSpecial;
}

void E42mSpecial::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<E42mSpecial*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(e_p_2_, n_);
  }
  if (_has_bits_[8 / 32] & 16128) {
    ZR_(ia_, wb_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  hist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool E42mSpecial::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.E42mSpecial)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double e_p_2 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_p_2_)));
          set_has_e_p_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_aver_a_2;
        break;
      }

      // optional double aver_a_2 = 2;
      case 2: {
        if (tag == 17) {
         parse_aver_a_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &aver_a_2_)));
          set_has_aver_a_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_int_e_a;
        break;
      }

      // optional double int_e_a = 4;
      case 4: {
        if (tag == 33) {
         parse_int_e_a:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &int_e_a_)));
          set_has_int_e_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_Na;
        break;
      }

      // optional double Na = 5;
      case 5: {
        if (tag == 41) {
         parse_Na:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &na_)));
          set_has_na();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_Nb;
        break;
      }

      // optional double Nb = 6;
      case 6: {
        if (tag == 49) {
         parse_Nb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nb_)));
          set_has_nb();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_Ia;
        break;
      }

      // optional double Ia = 7;
      case 7: {
        if (tag == 57) {
         parse_Ia:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ia_)));
          set_has_ia();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_Ib;
        break;
      }

      // optional double Ib = 8;
      case 8: {
        if (tag == 65) {
         parse_Ib:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ib_)));
          set_has_ib();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_Ia_aver;
        break;
      }

      // optional double Ia_aver = 9;
      case 9: {
        if (tag == 73) {
         parse_Ia_aver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ia_aver_)));
          set_has_ia_aver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_Ib_aver;
        break;
      }

      // optional double Ib_aver = 10;
      case 10: {
        if (tag == 81) {
         parse_Ib_aver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ib_aver_)));
          set_has_ib_aver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_Wa;
        break;
      }

      // optional double Wa = 11;
      case 11: {
        if (tag == 89) {
         parse_Wa:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wa_)));
          set_has_wa();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_Wb;
        break;
      }

      // optional double Wb = 12;
      case 12: {
        if (tag == 97) {
         parse_Wb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &wb_)));
          set_has_wb();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(107)) goto parse_hist;
        break;
      }

      // repeated group Hist = 13 {
      case 13: {
        if (tag == 107) {
         parse_hist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                13, input, add_hist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(107)) goto parse_hist;
        if (input->ExpectTag(129)) goto parse_e_m_2;
        break;
      }

      // optional double e_m_2 = 16;
      case 16: {
        if (tag == 129) {
         parse_e_m_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_m_2_)));
          set_has_e_m_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_M;
        break;
      }

      // optional double M = 17;
      case 17: {
        if (tag == 137) {
         parse_M:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_)));
          set_has_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_N;
        break;
      }

      // optional double N = 18;
      case 18: {
        if (tag == 145) {
         parse_N:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &n_)));
          set_has_n();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.E42mSpecial)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.E42mSpecial)
  return false;
#undef DO_
}

void E42mSpecial::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.E42mSpecial)
  // optional double e_p_2 = 1;
  if (has_e_p_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->e_p_2(), output);
  }

  // optional double aver_a_2 = 2;
  if (has_aver_a_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->aver_a_2(), output);
  }

  // optional double int_e_a = 4;
  if (has_int_e_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->int_e_a(), output);
  }

  // optional double Na = 5;
  if (has_na()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->na(), output);
  }

  // optional double Nb = 6;
  if (has_nb()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->nb(), output);
  }

  // optional double Ia = 7;
  if (has_ia()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->ia(), output);
  }

  // optional double Ib = 8;
  if (has_ib()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->ib(), output);
  }

  // optional double Ia_aver = 9;
  if (has_ia_aver()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->ia_aver(), output);
  }

  // optional double Ib_aver = 10;
  if (has_ib_aver()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->ib_aver(), output);
  }

  // optional double Wa = 11;
  if (has_wa()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->wa(), output);
  }

  // optional double Wb = 12;
  if (has_wb()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->wb(), output);
  }

  // repeated group Hist = 13 {
  for (int i = 0; i < this->hist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      13, this->hist(i), output);
  }

  // optional double e_m_2 = 16;
  if (has_e_m_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->e_m_2(), output);
  }

  // optional double M = 17;
  if (has_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->m(), output);
  }

  // optional double N = 18;
  if (has_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->n(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.E42mSpecial)
}

::google::protobuf::uint8* E42mSpecial::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.E42mSpecial)
  // optional double e_p_2 = 1;
  if (has_e_p_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->e_p_2(), target);
  }

  // optional double aver_a_2 = 2;
  if (has_aver_a_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->aver_a_2(), target);
  }

  // optional double int_e_a = 4;
  if (has_int_e_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->int_e_a(), target);
  }

  // optional double Na = 5;
  if (has_na()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->na(), target);
  }

  // optional double Nb = 6;
  if (has_nb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->nb(), target);
  }

  // optional double Ia = 7;
  if (has_ia()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->ia(), target);
  }

  // optional double Ib = 8;
  if (has_ib()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->ib(), target);
  }

  // optional double Ia_aver = 9;
  if (has_ia_aver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->ia_aver(), target);
  }

  // optional double Ib_aver = 10;
  if (has_ib_aver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->ib_aver(), target);
  }

  // optional double Wa = 11;
  if (has_wa()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->wa(), target);
  }

  // optional double Wb = 12;
  if (has_wb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->wb(), target);
  }

  // repeated group Hist = 13 {
  for (int i = 0; i < this->hist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        13, this->hist(i), target);
  }

  // optional double e_m_2 = 16;
  if (has_e_m_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->e_m_2(), target);
  }

  // optional double M = 17;
  if (has_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->m(), target);
  }

  // optional double N = 18;
  if (has_n()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->n(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.E42mSpecial)
  return target;
}

int E42mSpecial::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional double e_p_2 = 1;
    if (has_e_p_2()) {
      total_size += 1 + 8;
    }

    // optional double e_m_2 = 16;
    if (has_e_m_2()) {
      total_size += 2 + 8;
    }

    // optional double aver_a_2 = 2;
    if (has_aver_a_2()) {
      total_size += 1 + 8;
    }

    // optional double int_e_a = 4;
    if (has_int_e_a()) {
      total_size += 1 + 8;
    }

    // optional double Na = 5;
    if (has_na()) {
      total_size += 1 + 8;
    }

    // optional double Nb = 6;
    if (has_nb()) {
      total_size += 1 + 8;
    }

    // optional double M = 17;
    if (has_m()) {
      total_size += 2 + 8;
    }

    // optional double N = 18;
    if (has_n()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double Ia = 7;
    if (has_ia()) {
      total_size += 1 + 8;
    }

    // optional double Ib = 8;
    if (has_ib()) {
      total_size += 1 + 8;
    }

    // optional double Ia_aver = 9;
    if (has_ia_aver()) {
      total_size += 1 + 8;
    }

    // optional double Ib_aver = 10;
    if (has_ib_aver()) {
      total_size += 1 + 8;
    }

    // optional double Wa = 11;
    if (has_wa()) {
      total_size += 1 + 8;
    }

    // optional double Wb = 12;
    if (has_wb()) {
      total_size += 1 + 8;
    }

  }
  // repeated group Hist = 13 {
  total_size += 2 * this->hist_size();
  for (int i = 0; i < this->hist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->hist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void E42mSpecial::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const E42mSpecial* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const E42mSpecial*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void E42mSpecial::MergeFrom(const E42mSpecial& from) {
  GOOGLE_CHECK_NE(&from, this);
  hist_.MergeFrom(from.hist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_e_p_2()) {
      set_e_p_2(from.e_p_2());
    }
    if (from.has_e_m_2()) {
      set_e_m_2(from.e_m_2());
    }
    if (from.has_aver_a_2()) {
      set_aver_a_2(from.aver_a_2());
    }
    if (from.has_int_e_a()) {
      set_int_e_a(from.int_e_a());
    }
    if (from.has_na()) {
      set_na(from.na());
    }
    if (from.has_nb()) {
      set_nb(from.nb());
    }
    if (from.has_m()) {
      set_m(from.m());
    }
    if (from.has_n()) {
      set_n(from.n());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ia()) {
      set_ia(from.ia());
    }
    if (from.has_ib()) {
      set_ib(from.ib());
    }
    if (from.has_ia_aver()) {
      set_ia_aver(from.ia_aver());
    }
    if (from.has_ib_aver()) {
      set_ib_aver(from.ib_aver());
    }
    if (from.has_wa()) {
      set_wa(from.wa());
    }
    if (from.has_wb()) {
      set_wb(from.wb());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void E42mSpecial::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void E42mSpecial::CopyFrom(const E42mSpecial& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool E42mSpecial::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->hist())) return false;
  return true;
}

void E42mSpecial::Swap(E42mSpecial* other) {
  if (other != this) {
    std::swap(e_p_2_, other->e_p_2_);
    std::swap(e_m_2_, other->e_m_2_);
    std::swap(aver_a_2_, other->aver_a_2_);
    std::swap(int_e_a_, other->int_e_a_);
    std::swap(na_, other->na_);
    std::swap(nb_, other->nb_);
    std::swap(m_, other->m_);
    std::swap(n_, other->n_);
    std::swap(ia_, other->ia_);
    std::swap(ib_, other->ib_);
    std::swap(ia_aver_, other->ia_aver_);
    std::swap(ib_aver_, other->ib_aver_);
    std::swap(wa_, other->wa_);
    std::swap(wb_, other->wb_);
    hist_.Swap(&other->hist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata E42mSpecial::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = E42mSpecial_descriptor_;
  metadata.reflection = E42mSpecial_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
